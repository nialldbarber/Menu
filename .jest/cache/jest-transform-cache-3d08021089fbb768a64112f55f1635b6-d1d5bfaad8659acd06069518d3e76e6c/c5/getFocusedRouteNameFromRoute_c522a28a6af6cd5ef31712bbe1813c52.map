{"version":3,"sources":["getFocusedRouteNameFromRoute.tsx"],"names":["state","route","CHILD_STATE","params","routeName"],"mappings":";;;;;;;AAEA,IAAA,cAAA,GAAA,OAAA,mBAAA;;AAEe,SAAA,4BAAA,CAAA,KAAA,EAEO;AAAA,MAAA,kBAAA,EAAA,YAAA;;AAEpB,MAAMA,KAAK,GAAA,CAAA,kBAAA,GAAGC,KAAK,CAACC,cAAAA,CAAT,WAAQ,CAAR,MAAA,IAAA,IAAA,kBAAA,KAAA,KAAA,CAAA,GAAA,kBAAA,GAAyBD,KAAK,CAAzC,KAAA;AACA,MAAME,MAAM,GAAGF,KAAK,CAApB,MAAA;AAEA,MAAMG,SAAS,GAAGJ,KAAK,GAEnBA,KAAK,CAALA,MAAAA,CAAAA,CAAAA,YAAAA,GAGEA,KAAK,CAHPA,KAAAA,MAAAA,IAAAA,IAAAA,YAAAA,KAAAA,KAAAA,CAAAA,GAAAA,YAAAA,GAIK,OAAOA,KAAK,CAAZ,IAAA,KAAA,QAAA,IAAkCA,KAAK,CAALA,IAAAA,KAAlC,OAAA,GAAA,CAAA,GAEGA,KAAK,CAALA,MAAAA,CAAAA,MAAAA,GANRA,CAAAA,EAFmB,IAAA,GAWrB,QAAOG,MAAP,KAAA,IAAOA,IAAAA,MAAP,KAAA,KAAA,CAAOA,GAAP,KAAA,CAAOA,GAAAA,MAAM,CAAb,MAAA,MAAA,QAAA,GACEA,MAAM,CADR,MAAA,GAXF,SAAA;AAeA,SAAA,SAAA;AACD","sourcesContent":["import type { Route } from '@react-navigation/routers';\n\nimport { CHILD_STATE } from './useRouteCache';\n\nexport default function getFocusedRouteNameFromRoute(\n  route: Partial<Route<string>>\n): string | undefined {\n  // @ts-expect-error: this isn't in type definitions coz we want this private\n  const state = route[CHILD_STATE] ?? route.state;\n  const params = route.params as { screen?: unknown } | undefined;\n\n  const routeName = state\n    ? // Get the currently active route name in the nested navigator\n      state.routes[\n        // If we have a partial state without index, for tab/drawer, first screen will be focused one, and last for stack\n        // The type property will only exist for rehydrated state and not for state from deep link\n        state.index ??\n          (typeof state.type === 'string' && state.type !== 'stack'\n            ? 0\n            : state.routes.length - 1)\n      ].name\n    : // If state doesn't exist, we need to default to `screen` param if available\n    typeof params?.screen === 'string'\n    ? params.screen\n    : undefined;\n\n  return routeName;\n}\n"]}