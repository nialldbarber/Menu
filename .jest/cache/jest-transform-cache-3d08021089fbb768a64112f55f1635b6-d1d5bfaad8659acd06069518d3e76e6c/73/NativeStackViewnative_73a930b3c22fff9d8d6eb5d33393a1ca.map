{"version":3,"sources":["NativeStackView.native.tsx"],"names":["isAndroid","Platform","MaybeNestedStack","children","colors","headerShown","contentStyle","isHeaderInModal","presentation","header","headerShownPreviousRef","React","route","content","styles","backgroundColor","background","insets","dimensions","isLandscape","isFullScreenModal","topInset","headerHeight","container","StyleSheet","absoluteFill","SceneView","onDismissed","render","animationTypeForReplace","statusBarStyle","index","isHeaderInPush","isParentHeaderShown","HeaderShownContext","parentHeaderHeight","HeaderHeightContext","back","previousDescriptor","title","options","navigation","descriptors","dismissedRouteName","nextDismissedKey","state","message","console","descriptor","previousKey","type","data","closing","target","key","StackActions","source","setNextDismissedKey","flex"],"mappings":"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","sourcesContent":["import {\n  getDefaultHeaderHeight,\n  getHeaderTitle,\n  HeaderHeightContext,\n  HeaderShownContext,\n  SafeAreaProviderCompat,\n} from '@react-navigation/elements';\nimport {\n  ParamListBase,\n  Route,\n  StackActions,\n  StackNavigationState,\n  useTheme,\n} from '@react-navigation/native';\nimport * as React from 'react';\nimport { Platform, PlatformIOSStatic, StyleSheet } from 'react-native';\nimport {\n  useSafeAreaFrame,\n  useSafeAreaInsets,\n} from 'react-native-safe-area-context';\nimport {\n  Screen,\n  ScreenStack,\n  StackPresentationTypes,\n} from 'react-native-screens';\nimport warnOnce from 'warn-once';\n\nimport type {\n  NativeStackDescriptor,\n  NativeStackDescriptorMap,\n  NativeStackNavigationHelpers,\n  NativeStackNavigationOptions,\n} from '../types';\nimport DebugContainer from './DebugContainer';\nimport HeaderConfig from './HeaderConfig';\n\nconst isAndroid = Platform.OS === 'android';\n\nconst MaybeNestedStack = ({\n  options,\n  route,\n  presentation,\n  children,\n}: {\n  options: NativeStackNavigationOptions;\n  route: Route<string>;\n  presentation: Exclude<StackPresentationTypes, 'push'> | 'card';\n  children: React.ReactNode;\n}) => {\n  const { colors } = useTheme();\n  const { header, headerShown = true, contentStyle } = options;\n\n  const isHeaderInModal = isAndroid\n    ? false\n    : presentation !== 'card' && headerShown === true && header === undefined;\n\n  const headerShownPreviousRef = React.useRef(headerShown);\n\n  React.useEffect(() => {\n    warnOnce(\n      !isAndroid &&\n        presentation !== 'card' &&\n        headerShownPreviousRef.current !== headerShown,\n      `Dynamically changing 'headerShown' in modals will result in remounting the screen and losing all local state. See options for the screen '${route.name}'.`\n    );\n\n    headerShownPreviousRef.current = headerShown;\n  }, [headerShown, presentation, route.name]);\n\n  const content = (\n    <DebugContainer\n      style={[\n        styles.container,\n        presentation !== 'transparentModal' &&\n          presentation !== 'containedTransparentModal' && {\n            backgroundColor: colors.background,\n          },\n        contentStyle,\n      ]}\n      stackPresentation={presentation === 'card' ? 'push' : presentation}\n    >\n      {children}\n    </DebugContainer>\n  );\n\n  const insets = useSafeAreaInsets();\n  const dimensions = useSafeAreaFrame();\n  // landscape is meaningful only for iPhone\n  const isLandscape =\n    dimensions.width > dimensions.height &&\n    !(Platform as PlatformIOSStatic).isPad &&\n    !(Platform as PlatformIOSStatic).isTVOS;\n  // `modal` and `formSheet` presentations do not take whole screen, so should not take the inset.\n  const isFullScreenModal =\n    presentation !== 'modal' && presentation !== 'formSheet';\n  const topInset = isFullScreenModal && !isLandscape ? insets.top : 0;\n  const headerHeight = getDefaultHeaderHeight(\n    dimensions,\n    !isFullScreenModal,\n    topInset\n  );\n\n  if (isHeaderInModal) {\n    return (\n      <ScreenStack style={styles.container}>\n        <Screen enabled style={StyleSheet.absoluteFill}>\n          <HeaderShownContext.Provider value>\n            <HeaderHeightContext.Provider value={headerHeight}>\n              <HeaderConfig {...options} route={route} canGoBack />\n              {content}\n            </HeaderHeightContext.Provider>\n          </HeaderShownContext.Provider>\n        </Screen>\n      </ScreenStack>\n    );\n  }\n\n  return content;\n};\n\ntype SceneViewProps = {\n  index: number;\n  descriptor: NativeStackDescriptor;\n  previousDescriptor?: NativeStackDescriptor;\n  onWillDisappear: () => void;\n  onAppear: () => void;\n  onDisappear: () => void;\n  onDismissed: () => void;\n};\n\nconst SceneView = ({\n  descriptor,\n  previousDescriptor,\n  index,\n  onWillDisappear,\n  onAppear,\n  onDisappear,\n  onDismissed,\n}: SceneViewProps) => {\n  const { route, navigation, options, render } = descriptor;\n  const {\n    gestureEnabled,\n    header,\n    headerShown,\n    animationTypeForReplace = 'push',\n    animation,\n    orientation,\n    statusBarAnimation,\n    statusBarHidden,\n    statusBarStyle,\n  } = options;\n\n  let { presentation = 'card' } = options;\n\n  if (index === 0) {\n    // first screen should always be treated as `card`, it resolves problems with no header animation\n    // for navigator with first screen as `modal` and the next as `card`\n    presentation = 'card';\n  }\n\n  const isHeaderInPush = isAndroid\n    ? headerShown\n    : presentation === 'card' && headerShown !== false;\n\n  const insets = useSafeAreaInsets();\n\n  const isParentHeaderShown = React.useContext(HeaderShownContext);\n  const parentHeaderHeight = React.useContext(HeaderHeightContext);\n  const headerHeight = getDefaultHeaderHeight(\n    useSafeAreaFrame(),\n    false,\n    insets.top\n  );\n\n  return (\n    <Screen\n      key={route.key}\n      enabled\n      style={StyleSheet.absoluteFill}\n      gestureEnabled={\n        isAndroid\n          ? // This prop enables handling of system back gestures on Android\n            // Since we handle them in JS side, we disable this\n            false\n          : gestureEnabled\n      }\n      replaceAnimation={animationTypeForReplace}\n      stackPresentation={presentation === 'card' ? 'push' : presentation}\n      stackAnimation={animation}\n      screenOrientation={orientation}\n      statusBarAnimation={statusBarAnimation}\n      statusBarHidden={statusBarHidden}\n      statusBarStyle={statusBarStyle}\n      onWillDisappear={onWillDisappear}\n      onAppear={onAppear}\n      onDisappear={onDisappear}\n      onDismissed={onDismissed}\n    >\n      <HeaderShownContext.Provider\n        value={isParentHeaderShown || isHeaderInPush !== false}\n      >\n        <HeaderHeightContext.Provider\n          value={\n            isHeaderInPush !== false ? headerHeight : parentHeaderHeight ?? 0\n          }\n        >\n          {header !== undefined && headerShown !== false ? (\n            // TODO: expose custom header height\n            header({\n              back: previousDescriptor\n                ? {\n                    title: getHeaderTitle(\n                      previousDescriptor.options,\n                      previousDescriptor.route.name\n                    ),\n                  }\n                : undefined,\n              options,\n              route,\n              navigation,\n            })\n          ) : (\n            <HeaderConfig\n              {...options}\n              route={route}\n              headerShown={isHeaderInPush}\n              canGoBack={index !== 0}\n            />\n          )}\n          <MaybeNestedStack\n            options={options}\n            route={route}\n            presentation={presentation}\n          >\n            {render()}\n          </MaybeNestedStack>\n        </HeaderHeightContext.Provider>\n      </HeaderShownContext.Provider>\n    </Screen>\n  );\n};\n\ntype Props = {\n  state: StackNavigationState<ParamListBase>;\n  navigation: NativeStackNavigationHelpers;\n  descriptors: NativeStackDescriptorMap;\n};\n\nfunction NativeStackViewInner({ state, navigation, descriptors }: Props) {\n  const [nextDismissedKey, setNextDismissedKey] =\n    React.useState<string | null>(null);\n\n  const dismissedRouteName = nextDismissedKey\n    ? state.routes.find((route) => route.key === nextDismissedKey)?.name\n    : null;\n\n  React.useEffect(() => {\n    if (dismissedRouteName) {\n      const message =\n        `The screen '${dismissedRouteName}' was removed natively but didn't get removed from JS state. ` +\n        `This can happen if the action was prevented in a 'beforeRemove' listener, which is not fully supported in native-stack.\\n\\n` +\n        `Consider using 'gestureEnabled: false' to prevent back gesture and use a custom back button with 'headerLeft' option to override the native behavior.`;\n\n      console.error(message);\n    }\n  }, [dismissedRouteName]);\n\n  return (\n    <ScreenStack style={styles.container}>\n      {state.routes.map((route, index) => {\n        const descriptor = descriptors[route.key];\n        const previousKey = state.routes[index - 1]?.key;\n        const previousDescriptor = previousKey\n          ? descriptors[previousKey]\n          : undefined;\n\n        return (\n          <SceneView\n            key={route.key}\n            index={index}\n            descriptor={descriptor}\n            previousDescriptor={previousDescriptor}\n            onWillDisappear={() => {\n              navigation.emit({\n                type: 'transitionStart',\n                data: { closing: true },\n                target: route.key,\n              });\n            }}\n            onAppear={() => {\n              navigation.emit({\n                type: 'transitionEnd',\n                data: { closing: false },\n                target: route.key,\n              });\n            }}\n            onDisappear={() => {\n              navigation.emit({\n                type: 'transitionEnd',\n                data: { closing: true },\n                target: route.key,\n              });\n            }}\n            onDismissed={() => {\n              navigation.dispatch({\n                ...StackActions.pop(),\n                source: route.key,\n                target: state.key,\n              });\n\n              setNextDismissedKey(route.key);\n            }}\n          />\n        );\n      })}\n    </ScreenStack>\n  );\n}\n\nexport default function NativeStackView(props: Props) {\n  return (\n    <SafeAreaProviderCompat>\n      <NativeStackViewInner {...props} />\n    </SafeAreaProviderCompat>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n});\n"]}