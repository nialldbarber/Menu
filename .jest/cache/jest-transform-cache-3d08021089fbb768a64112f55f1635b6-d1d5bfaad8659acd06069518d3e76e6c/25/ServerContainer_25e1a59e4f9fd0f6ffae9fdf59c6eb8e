b879dd70c3778f2ea7ebec6d67db76ae
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _core = require("@react-navigation/core");

var React = _interopRequireWildcard(require("react"));

var _ServerContext = _interopRequireDefault(require("./ServerContext"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}

function _getRequireWildcardCache(nodeInterop) {
  if (typeof WeakMap !== "function") return null;
  var cacheBabelInterop = new WeakMap();
  var cacheNodeInterop = new WeakMap();
  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {
    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
  })(nodeInterop);
}

function _interopRequireWildcard(obj, nodeInterop) {
  if (!nodeInterop && obj && obj.__esModule) {
    return obj;
  }

  if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
    return {
      default: obj
    };
  }

  var cache = _getRequireWildcardCache(nodeInterop);

  if (cache && cache.has(obj)) {
    return cache.get(obj);
  }

  var newObj = {};
  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;

  for (var key in obj) {
    if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;

      if (desc && (desc.get || desc.set)) {
        Object.defineProperty(newObj, key, desc);
      } else {
        newObj[key] = obj[key];
      }
    }
  }

  newObj.default = obj;

  if (cache) {
    cache.set(obj, newObj);
  }

  return newObj;
}

var _default = React.forwardRef(function ServerContainer(_ref, ref) {
  var children = _ref.children,
      location = _ref.location;
  React.useEffect(function () {
    console.error("'ServerContainer' should only be used on the server with 'react-dom/server' for SSR.");
  }, []);
  var current = {};

  if (ref) {
    var value = {
      getCurrentOptions: function getCurrentOptions() {
        return current.options;
      }
    };

    if (typeof ref === 'function') {
      ref(value);
    } else {
      ref.current = value;
    }
  }

  return React.createElement(_ServerContext.default.Provider, {
    value: {
      location: location
    }
  }, React.createElement(_core.CurrentRenderContext.Provider, {
    value: current
  }, children));
});

exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlNlcnZlckNvbnRhaW5lci50c3giXSwibmFtZXMiOlsibG9jYXRpb24iLCJSZWFjdCIsImNvbnNvbGUiLCJjdXJyZW50IiwidmFsdWUiLCJnZXRDdXJyZW50T3B0aW9ucyIsInJlZiJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBLElBQUEsS0FBQSxHQUFBLE9BQUEsQ0FBQSx3QkFBQSxDQUFBOztBQUNBLElBQUEsS0FBQSxHQUFBLHVCQUFBLENBQUEsT0FBQSxDQUFBLE9BQUEsQ0FBQSxDQUFBOztBQUVBLElBQUEsY0FBQSxHQUFBLHNCQUFBLENBQUEsT0FBQSxtQkFBQSxDQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O2VBY2UsS0FBSyxDQUFMLFVBQUEsQ0FBaUIsU0FBQSxlQUFBLE9BQUEsR0FBQSxFQUc5QjtBQUFBLE1BRkEsUUFFQSxRQUZBLFFBRUE7QUFBQSxNQUZZQSxRQUVaLFFBRllBLFFBRVo7QUFDQUMsRUFBQUEsS0FBSyxDQUFMQSxTQUFBQSxDQUFnQixZQUFNO0FBQ3BCQyxJQUFBQSxPQUFPLENBQVBBLEtBQUFBLENBQUFBLHNGQUFBQTtBQURGRCxHQUFBQSxFQUFBQSxFQUFBQTtBQU1BLE1BQU1FLE9BQTZCLEdBQW5DLEVBQUE7O0FBRUEsTUFBQSxHQUFBLEVBQVM7QUFDUCxRQUFNQyxLQUFLLEdBQUc7QUFDWkMsTUFBQUEsaUJBRFksK0JBQ1E7QUFDbEIsZUFBT0YsT0FBTyxDQUFkLE9BQUE7QUFDRDtBQUhXLEtBQWQ7O0FBVUEsUUFBSSxPQUFBLEdBQUEsS0FBSixVQUFBLEVBQStCO0FBQzdCRyxNQUFBQSxHQUFHLENBQUhBLEtBQUcsQ0FBSEE7QUFERixLQUFBLE1BRU87QUFFTEEsTUFBQUEsR0FBRyxDQUFIQSxPQUFBQSxHQUFBQSxLQUFBQTtBQUNEO0FBQ0Y7O0FBRUQsU0FDRSxLQUFBLENBQUEsYUFBQSxDQUFDLGNBQUEsQ0FBRCxPQUFDLENBQUQsUUFBQSxFQUFBO0FBQXdCLElBQUEsS0FBSyxFQUFFO0FBQUVOLE1BQUFBLFFBQUFBLEVBQUFBO0FBQUY7QUFBL0IsR0FBQSxFQUNFLEtBQUEsQ0FBQSxhQUFBLENBQUMsS0FBQSxDQUFELG9CQUFDLENBQUQsUUFBQSxFQUFBO0FBQStCLElBQUEsS0FBSyxFQUFFRztBQUF0QyxHQUFBLEVBRkosUUFFSSxDQURGLENBREY7QUEvQmEsQ0FBQSxDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ3VycmVudFJlbmRlckNvbnRleHQgfSBmcm9tICdAcmVhY3QtbmF2aWdhdGlvbi9jb3JlJztcbmltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcblxuaW1wb3J0IFNlcnZlckNvbnRleHQsIHsgU2VydmVyQ29udGV4dFR5cGUgfSBmcm9tICcuL1NlcnZlckNvbnRleHQnO1xuaW1wb3J0IHR5cGUgeyBTZXJ2ZXJDb250YWluZXJSZWYgfSBmcm9tICcuL3R5cGVzJztcblxudHlwZSBQcm9wcyA9IFNlcnZlckNvbnRleHRUeXBlICYge1xuICBjaGlsZHJlbjogUmVhY3QuUmVhY3ROb2RlO1xufTtcblxuLyoqXG4gKiBDb250YWluZXIgY29tcG9uZW50IGZvciBzZXJ2ZXIgcmVuZGVyaW5nLlxuICpcbiAqIEBwYXJhbSBwcm9wcy5sb2NhdGlvbiBMb2NhdGlvbiBvYmplY3QgdG8gYmFzZSB0aGUgaW5pdGlhbCBVUkwgZm9yIFNTUi5cbiAqIEBwYXJhbSBwcm9wcy5jaGlsZHJlbiBDaGlsZCBlbGVtZW50cyB0byByZW5kZXIgdGhlIGNvbnRlbnQuXG4gKiBAcGFyYW0gcHJvcHMucmVmIFJlZiBvYmplY3Qgd2hpY2ggY29udGFpbnMgaGVscGVyIG1ldGhvZHMuXG4gKi9cbmV4cG9ydCBkZWZhdWx0IFJlYWN0LmZvcndhcmRSZWYoZnVuY3Rpb24gU2VydmVyQ29udGFpbmVyKFxuICB7IGNoaWxkcmVuLCBsb2NhdGlvbiB9OiBQcm9wcyxcbiAgcmVmOiBSZWFjdC5SZWY8U2VydmVyQ29udGFpbmVyUmVmPlxuKSB7XG4gIFJlYWN0LnVzZUVmZmVjdCgoKSA9PiB7XG4gICAgY29uc29sZS5lcnJvcihcbiAgICAgIFwiJ1NlcnZlckNvbnRhaW5lcicgc2hvdWxkIG9ubHkgYmUgdXNlZCBvbiB0aGUgc2VydmVyIHdpdGggJ3JlYWN0LWRvbS9zZXJ2ZXInIGZvciBTU1IuXCJcbiAgICApO1xuICB9LCBbXSk7XG5cbiAgY29uc3QgY3VycmVudDogeyBvcHRpb25zPzogb2JqZWN0IH0gPSB7fTtcblxuICBpZiAocmVmKSB7XG4gICAgY29uc3QgdmFsdWUgPSB7XG4gICAgICBnZXRDdXJyZW50T3B0aW9ucygpIHtcbiAgICAgICAgcmV0dXJuIGN1cnJlbnQub3B0aW9ucztcbiAgICAgIH0sXG4gICAgfTtcblxuICAgIC8vIFdlIHdyaXRlIHRvIHRoZSBgcmVmYCBkdXJpbmcgcmVuZGVyIGluc3RlYWQgb2YgYFJlYWN0LnVzZUltcGVyYXRpdmVIYW5kbGVgXG4gICAgLy8gVGhpcyBpcyBiZWNhdXNlIGB1c2VJbXBlcmF0aXZlSGFuZGxlYCB3aWxsIHVwZGF0ZSB0aGUgcmVmIGFmdGVyICdjb21taXQnLFxuICAgIC8vIGFuZCB0aGVyZSdzIG5vICdjb21taXQnIHBoYXNlIGR1cmluZyBTU1IuXG4gICAgLy8gTXV0YXRpbmcgcmVmIGR1cmluZyByZW5kZXIgaXMgdW5zYWZlIGluIGNvbmN1cnJlbnQgbW9kZSwgYnV0IHdlIGRvbid0IGNhcmUgYWJvdXQgaXQgZm9yIFNTUi5cbiAgICBpZiAodHlwZW9mIHJlZiA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgcmVmKHZhbHVlKTtcbiAgICB9IGVsc2Uge1xuICAgICAgLy8gQHRzLWV4cGVjdC1lcnJvcjogdGhlIFRTIHR5cGVzIGFyZSBpbmNvcnJlY3QgYW5kIHNheSB0aGF0IHJlZi5jdXJyZW50IGlzIHJlYWRvbmx5XG4gICAgICByZWYuY3VycmVudCA9IHZhbHVlO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiAoXG4gICAgPFNlcnZlckNvbnRleHQuUHJvdmlkZXIgdmFsdWU9e3sgbG9jYXRpb24gfX0+XG4gICAgICA8Q3VycmVudFJlbmRlckNvbnRleHQuUHJvdmlkZXIgdmFsdWU9e2N1cnJlbnR9PlxuICAgICAgICB7Y2hpbGRyZW59XG4gICAgICA8L0N1cnJlbnRSZW5kZXJDb250ZXh0LlByb3ZpZGVyPlxuICAgIDwvU2VydmVyQ29udGV4dC5Qcm92aWRlcj5cbiAgKTtcbn0pO1xuIl19