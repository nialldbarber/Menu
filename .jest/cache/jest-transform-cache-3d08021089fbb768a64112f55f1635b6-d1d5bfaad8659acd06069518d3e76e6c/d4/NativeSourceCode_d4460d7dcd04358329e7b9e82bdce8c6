acd4aff9c68fa2cad24dccd1cfa28099
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var TurboModuleRegistry = _interopRequireWildcard(require("../../TurboModule/TurboModuleRegistry"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

var NativeModule = TurboModuleRegistry.getEnforcing('SourceCode');
var constants = null;
var NativeSourceCode = {
  getConstants: function getConstants() {
    if (constants == null) {
      constants = NativeModule.getConstants();
    }

    return constants;
  }
};
var _default = NativeSourceCode;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIk5hdGl2ZVNvdXJjZUNvZGUuanMiXSwibmFtZXMiOlsiTmF0aXZlTW9kdWxlIiwiVHVyYm9Nb2R1bGVSZWdpc3RyeSIsImdldEVuZm9yY2luZyIsImNvbnN0YW50cyIsIk5hdGl2ZVNvdXJjZUNvZGUiLCJnZXRDb25zdGFudHMiXSwibWFwcGluZ3MiOiJBQVVBOzs7Ozs7O0FBR0E7Ozs7OztBQVFBLElBQU1BLFlBQVksR0FBR0MsbUJBQW1CLENBQUNDLFlBQXBCLENBQXVDLFlBQXZDLENBQXJCO0FBQ0EsSUFBSUMsU0FBUyxHQUFHLElBQWhCO0FBRUEsSUFBTUMsZ0JBQWdCLEdBQUc7QUFDdkJDLEVBQUFBLFlBRHVCLDBCQUdwQjtBQUNELFFBQUlGLFNBQVMsSUFBSSxJQUFqQixFQUF1QjtBQUNyQkEsTUFBQUEsU0FBUyxHQUFHSCxZQUFZLENBQUNLLFlBQWIsRUFBWjtBQUNEOztBQUVELFdBQU9GLFNBQVA7QUFDRDtBQVRzQixDQUF6QjtlQVllQyxnQiIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICogQGZsb3cgc3RyaWN0XG4gKiBAZm9ybWF0XG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG5pbXBvcnQgdHlwZSB7VHVyYm9Nb2R1bGV9IGZyb20gJy4uLy4uL1R1cmJvTW9kdWxlL1JDVEV4cG9ydCc7XG5pbXBvcnQgKiBhcyBUdXJib01vZHVsZVJlZ2lzdHJ5IGZyb20gJy4uLy4uL1R1cmJvTW9kdWxlL1R1cmJvTW9kdWxlUmVnaXN0cnknO1xuXG5leHBvcnQgaW50ZXJmYWNlIFNwZWMgZXh0ZW5kcyBUdXJib01vZHVsZSB7XG4gICtnZXRDb25zdGFudHM6ICgpID0+IHt8XG4gICAgc2NyaXB0VVJMOiBzdHJpbmcsXG4gIHx9O1xufVxuXG5jb25zdCBOYXRpdmVNb2R1bGUgPSBUdXJib01vZHVsZVJlZ2lzdHJ5LmdldEVuZm9yY2luZzxTcGVjPignU291cmNlQ29kZScpO1xubGV0IGNvbnN0YW50cyA9IG51bGw7XG5cbmNvbnN0IE5hdGl2ZVNvdXJjZUNvZGUgPSB7XG4gIGdldENvbnN0YW50cygpOiB7fFxuICAgIHNjcmlwdFVSTDogc3RyaW5nLFxuICB8fSB7XG4gICAgaWYgKGNvbnN0YW50cyA9PSBudWxsKSB7XG4gICAgICBjb25zdGFudHMgPSBOYXRpdmVNb2R1bGUuZ2V0Q29uc3RhbnRzKCk7XG4gICAgfVxuXG4gICAgcmV0dXJuIGNvbnN0YW50cztcbiAgfSxcbn07XG5cbmV4cG9ydCBkZWZhdWx0IE5hdGl2ZVNvdXJjZUNvZGU7XG4iXX0=