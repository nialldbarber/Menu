{"version":3,"sources":["useCurrentRender.tsx"],"names":["descriptors","current","React","CurrentRenderContext","navigation","state"],"mappings":";;;;;;;AACA,IAAA,KAAA,GAAA,uBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AAEA,IAAA,qBAAA,GAAA,sBAAA,CAAA,OAAA,0BAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqBe,SAAA,gBAAA,OAIH;AAAA,MAJ6B,KAI7B,QAJ6B,KAI7B;AAAA,MAJ6B,UAI7B,QAJ6B,UAI7B;AAAA,MADVA,WACU,QADVA,WACU;AACV,MAAMC,OAAO,GAAGC,KAAK,CAALA,UAAAA,CAAiBC,qBAAAA,CAAjC,OAAgBD,CAAhB;;AAEA,MAAID,OAAO,IAAIG,UAAU,CAAzB,SAAeA,EAAf,EAAuC;AACrCH,IAAAA,OAAO,CAAPA,OAAAA,GAAkBD,WAAW,CAACK,KAAK,CAALA,MAAAA,CAAaA,KAAK,CAAlBA,KAAAA,EAAZL,GAAW,CAAXA,CAAlBC,OAAAA;AACD;AACF","sourcesContent":["import type { NavigationState, ParamListBase } from '@react-navigation/routers';\nimport * as React from 'react';\n\nimport CurrentRenderContext from './CurrentRenderContext';\nimport type {\n  Descriptor,\n  NavigationHelpers,\n  NavigationProp,\n  RouteProp,\n} from './types';\n\ntype Options = {\n  state: NavigationState;\n  navigation: NavigationHelpers<ParamListBase>;\n  descriptors: Record<\n    string,\n    Descriptor<object, NavigationProp<ParamListBase>, RouteProp<ParamListBase>>\n  >;\n};\n\n/**\n * Write the current options, so that server renderer can get current values\n * Mutating values like this is not safe in async mode, but it doesn't apply to SSR\n */\nexport default function useCurrentRender({\n  state,\n  navigation,\n  descriptors,\n}: Options) {\n  const current = React.useContext(CurrentRenderContext);\n\n  if (current && navigation.isFocused()) {\n    current.options = descriptors[state.routes[state.index].key].options;\n  }\n}\n"]}