3045fd11d4da8b5f7944337e059fafa8
'use strict';

var ScrollViewViewConfig = {
  uiViewClassName: 'RCTScrollView',
  bubblingEventTypes: {},
  directEventTypes: {
    topScrollToTop: {
      registrationName: 'onScrollToTop'
    }
  },
  validAttributes: {
    alwaysBounceHorizontal: true,
    alwaysBounceVertical: true,
    automaticallyAdjustContentInsets: true,
    bounces: true,
    bouncesZoom: true,
    canCancelContentTouches: true,
    centerContent: true,
    contentInset: {
      diff: require("../../Utilities/differ/pointsDiffer")
    },
    contentOffset: {
      diff: require("../../Utilities/differ/pointsDiffer")
    },
    contentInsetAdjustmentBehavior: true,
    decelerationRate: true,
    directionalLockEnabled: true,
    disableIntervalMomentum: true,
    endFillColor: {
      process: require("../../StyleSheet/processColor")
    },
    fadingEdgeLength: true,
    indicatorStyle: true,
    keyboardDismissMode: true,
    maintainVisibleContentPosition: true,
    maximumZoomScale: true,
    minimumZoomScale: true,
    nestedScrollEnabled: true,
    onMomentumScrollBegin: true,
    onMomentumScrollEnd: true,
    onScroll: true,
    onScrollBeginDrag: true,
    onScrollEndDrag: true,
    onScrollToTop: true,
    overScrollMode: true,
    pagingEnabled: true,
    persistentScrollbar: true,
    pinchGestureEnabled: true,
    scrollEnabled: true,
    scrollEventThrottle: true,
    scrollIndicatorInsets: {
      diff: require("../../Utilities/differ/pointsDiffer")
    },
    scrollPerfTag: true,
    scrollToOverflowEnabled: true,
    scrollsToTop: true,
    sendMomentumEvents: true,
    showsHorizontalScrollIndicator: true,
    showsVerticalScrollIndicator: true,
    snapToAlignment: true,
    snapToEnd: true,
    snapToInterval: true,
    snapToOffsets: true,
    snapToStart: true,
    zoomScale: true
  }
};
module.exports = ScrollViewViewConfig;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlNjcm9sbFZpZXdWaWV3Q29uZmlnLmpzIl0sIm5hbWVzIjpbIlNjcm9sbFZpZXdWaWV3Q29uZmlnIiwidWlWaWV3Q2xhc3NOYW1lIiwiYnViYmxpbmdFdmVudFR5cGVzIiwiZGlyZWN0RXZlbnRUeXBlcyIsInRvcFNjcm9sbFRvVG9wIiwicmVnaXN0cmF0aW9uTmFtZSIsInZhbGlkQXR0cmlidXRlcyIsImFsd2F5c0JvdW5jZUhvcml6b250YWwiLCJhbHdheXNCb3VuY2VWZXJ0aWNhbCIsImF1dG9tYXRpY2FsbHlBZGp1c3RDb250ZW50SW5zZXRzIiwiYm91bmNlcyIsImJvdW5jZXNab29tIiwiY2FuQ2FuY2VsQ29udGVudFRvdWNoZXMiLCJjZW50ZXJDb250ZW50IiwiY29udGVudEluc2V0IiwiZGlmZiIsInJlcXVpcmUiLCJjb250ZW50T2Zmc2V0IiwiY29udGVudEluc2V0QWRqdXN0bWVudEJlaGF2aW9yIiwiZGVjZWxlcmF0aW9uUmF0ZSIsImRpcmVjdGlvbmFsTG9ja0VuYWJsZWQiLCJkaXNhYmxlSW50ZXJ2YWxNb21lbnR1bSIsImVuZEZpbGxDb2xvciIsInByb2Nlc3MiLCJmYWRpbmdFZGdlTGVuZ3RoIiwiaW5kaWNhdG9yU3R5bGUiLCJrZXlib2FyZERpc21pc3NNb2RlIiwibWFpbnRhaW5WaXNpYmxlQ29udGVudFBvc2l0aW9uIiwibWF4aW11bVpvb21TY2FsZSIsIm1pbmltdW1ab29tU2NhbGUiLCJuZXN0ZWRTY3JvbGxFbmFibGVkIiwib25Nb21lbnR1bVNjcm9sbEJlZ2luIiwib25Nb21lbnR1bVNjcm9sbEVuZCIsIm9uU2Nyb2xsIiwib25TY3JvbGxCZWdpbkRyYWciLCJvblNjcm9sbEVuZERyYWciLCJvblNjcm9sbFRvVG9wIiwib3ZlclNjcm9sbE1vZGUiLCJwYWdpbmdFbmFibGVkIiwicGVyc2lzdGVudFNjcm9sbGJhciIsInBpbmNoR2VzdHVyZUVuYWJsZWQiLCJzY3JvbGxFbmFibGVkIiwic2Nyb2xsRXZlbnRUaHJvdHRsZSIsInNjcm9sbEluZGljYXRvckluc2V0cyIsInNjcm9sbFBlcmZUYWciLCJzY3JvbGxUb092ZXJmbG93RW5hYmxlZCIsInNjcm9sbHNUb1RvcCIsInNlbmRNb21lbnR1bUV2ZW50cyIsInNob3dzSG9yaXpvbnRhbFNjcm9sbEluZGljYXRvciIsInNob3dzVmVydGljYWxTY3JvbGxJbmRpY2F0b3IiLCJzbmFwVG9BbGlnbm1lbnQiLCJzbmFwVG9FbmQiLCJzbmFwVG9JbnRlcnZhbCIsInNuYXBUb09mZnNldHMiLCJzbmFwVG9TdGFydCIsInpvb21TY2FsZSIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQVVBOztBQUlBLElBQU1BLG9CQUFvQixHQUFHO0FBQzNCQyxFQUFBQSxlQUFlLEVBQUUsZUFEVTtBQUUzQkMsRUFBQUEsa0JBQWtCLEVBQUUsRUFGTztBQUczQkMsRUFBQUEsZ0JBQWdCLEVBQUU7QUFDaEJDLElBQUFBLGNBQWMsRUFBRTtBQUNkQyxNQUFBQSxnQkFBZ0IsRUFBRTtBQURKO0FBREEsR0FIUztBQVEzQkMsRUFBQUEsZUFBZSxFQUFFO0FBQ2ZDLElBQUFBLHNCQUFzQixFQUFFLElBRFQ7QUFFZkMsSUFBQUEsb0JBQW9CLEVBQUUsSUFGUDtBQUdmQyxJQUFBQSxnQ0FBZ0MsRUFBRSxJQUhuQjtBQUlmQyxJQUFBQSxPQUFPLEVBQUUsSUFKTTtBQUtmQyxJQUFBQSxXQUFXLEVBQUUsSUFMRTtBQU1mQyxJQUFBQSx1QkFBdUIsRUFBRSxJQU5WO0FBT2ZDLElBQUFBLGFBQWEsRUFBRSxJQVBBO0FBUWZDLElBQUFBLFlBQVksRUFBRTtBQUFDQyxNQUFBQSxJQUFJLEVBQUVDLE9BQU87QUFBZCxLQVJDO0FBU2ZDLElBQUFBLGFBQWEsRUFBRTtBQUFDRixNQUFBQSxJQUFJLEVBQUVDLE9BQU87QUFBZCxLQVRBO0FBVWZFLElBQUFBLDhCQUE4QixFQUFFLElBVmpCO0FBV2ZDLElBQUFBLGdCQUFnQixFQUFFLElBWEg7QUFZZkMsSUFBQUEsc0JBQXNCLEVBQUUsSUFaVDtBQWFmQyxJQUFBQSx1QkFBdUIsRUFBRSxJQWJWO0FBY2ZDLElBQUFBLFlBQVksRUFBRTtBQUFDQyxNQUFBQSxPQUFPLEVBQUVQLE9BQU87QUFBakIsS0FkQztBQWVmUSxJQUFBQSxnQkFBZ0IsRUFBRSxJQWZIO0FBZ0JmQyxJQUFBQSxjQUFjLEVBQUUsSUFoQkQ7QUFpQmZDLElBQUFBLG1CQUFtQixFQUFFLElBakJOO0FBa0JmQyxJQUFBQSw4QkFBOEIsRUFBRSxJQWxCakI7QUFtQmZDLElBQUFBLGdCQUFnQixFQUFFLElBbkJIO0FBb0JmQyxJQUFBQSxnQkFBZ0IsRUFBRSxJQXBCSDtBQXFCZkMsSUFBQUEsbUJBQW1CLEVBQUUsSUFyQk47QUFzQmZDLElBQUFBLHFCQUFxQixFQUFFLElBdEJSO0FBdUJmQyxJQUFBQSxtQkFBbUIsRUFBRSxJQXZCTjtBQXdCZkMsSUFBQUEsUUFBUSxFQUFFLElBeEJLO0FBeUJmQyxJQUFBQSxpQkFBaUIsRUFBRSxJQXpCSjtBQTBCZkMsSUFBQUEsZUFBZSxFQUFFLElBMUJGO0FBMkJmQyxJQUFBQSxhQUFhLEVBQUUsSUEzQkE7QUE0QmZDLElBQUFBLGNBQWMsRUFBRSxJQTVCRDtBQTZCZkMsSUFBQUEsYUFBYSxFQUFFLElBN0JBO0FBOEJmQyxJQUFBQSxtQkFBbUIsRUFBRSxJQTlCTjtBQStCZkMsSUFBQUEsbUJBQW1CLEVBQUUsSUEvQk47QUFnQ2ZDLElBQUFBLGFBQWEsRUFBRSxJQWhDQTtBQWlDZkMsSUFBQUEsbUJBQW1CLEVBQUUsSUFqQ047QUFrQ2ZDLElBQUFBLHFCQUFxQixFQUFFO0FBQ3JCNUIsTUFBQUEsSUFBSSxFQUFFQyxPQUFPO0FBRFEsS0FsQ1I7QUFxQ2Y0QixJQUFBQSxhQUFhLEVBQUUsSUFyQ0E7QUFzQ2ZDLElBQUFBLHVCQUF1QixFQUFFLElBdENWO0FBdUNmQyxJQUFBQSxZQUFZLEVBQUUsSUF2Q0M7QUF3Q2ZDLElBQUFBLGtCQUFrQixFQUFFLElBeENMO0FBeUNmQyxJQUFBQSw4QkFBOEIsRUFBRSxJQXpDakI7QUEwQ2ZDLElBQUFBLDRCQUE0QixFQUFFLElBMUNmO0FBMkNmQyxJQUFBQSxlQUFlLEVBQUUsSUEzQ0Y7QUE0Q2ZDLElBQUFBLFNBQVMsRUFBRSxJQTVDSTtBQTZDZkMsSUFBQUEsY0FBYyxFQUFFLElBN0NEO0FBOENmQyxJQUFBQSxhQUFhLEVBQUUsSUE5Q0E7QUErQ2ZDLElBQUFBLFdBQVcsRUFBRSxJQS9DRTtBQWdEZkMsSUFBQUEsU0FBUyxFQUFFO0FBaERJO0FBUlUsQ0FBN0I7QUE0REFDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFrQnpELG9CQUFsQiIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICogQGZsb3cgc3RyaWN0LWxvY2FsXG4gKiBAZm9ybWF0XG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG5pbXBvcnQgdHlwZSB7R2VuZXJhdGVkVmlld0NvbmZpZ30gZnJvbSAnLi4vLi4vVXRpbGl0aWVzL3JlZ2lzdGVyR2VuZXJhdGVkVmlld0NvbmZpZyc7XG5cbmNvbnN0IFNjcm9sbFZpZXdWaWV3Q29uZmlnID0ge1xuICB1aVZpZXdDbGFzc05hbWU6ICdSQ1RTY3JvbGxWaWV3JyxcbiAgYnViYmxpbmdFdmVudFR5cGVzOiB7fSxcbiAgZGlyZWN0RXZlbnRUeXBlczoge1xuICAgIHRvcFNjcm9sbFRvVG9wOiB7XG4gICAgICByZWdpc3RyYXRpb25OYW1lOiAnb25TY3JvbGxUb1RvcCcsXG4gICAgfSxcbiAgfSxcbiAgdmFsaWRBdHRyaWJ1dGVzOiB7XG4gICAgYWx3YXlzQm91bmNlSG9yaXpvbnRhbDogdHJ1ZSxcbiAgICBhbHdheXNCb3VuY2VWZXJ0aWNhbDogdHJ1ZSxcbiAgICBhdXRvbWF0aWNhbGx5QWRqdXN0Q29udGVudEluc2V0czogdHJ1ZSxcbiAgICBib3VuY2VzOiB0cnVlLFxuICAgIGJvdW5jZXNab29tOiB0cnVlLFxuICAgIGNhbkNhbmNlbENvbnRlbnRUb3VjaGVzOiB0cnVlLFxuICAgIGNlbnRlckNvbnRlbnQ6IHRydWUsXG4gICAgY29udGVudEluc2V0OiB7ZGlmZjogcmVxdWlyZSgnLi4vLi4vVXRpbGl0aWVzL2RpZmZlci9wb2ludHNEaWZmZXInKX0sXG4gICAgY29udGVudE9mZnNldDoge2RpZmY6IHJlcXVpcmUoJy4uLy4uL1V0aWxpdGllcy9kaWZmZXIvcG9pbnRzRGlmZmVyJyl9LFxuICAgIGNvbnRlbnRJbnNldEFkanVzdG1lbnRCZWhhdmlvcjogdHJ1ZSxcbiAgICBkZWNlbGVyYXRpb25SYXRlOiB0cnVlLFxuICAgIGRpcmVjdGlvbmFsTG9ja0VuYWJsZWQ6IHRydWUsXG4gICAgZGlzYWJsZUludGVydmFsTW9tZW50dW06IHRydWUsXG4gICAgZW5kRmlsbENvbG9yOiB7cHJvY2VzczogcmVxdWlyZSgnLi4vLi4vU3R5bGVTaGVldC9wcm9jZXNzQ29sb3InKX0sXG4gICAgZmFkaW5nRWRnZUxlbmd0aDogdHJ1ZSxcbiAgICBpbmRpY2F0b3JTdHlsZTogdHJ1ZSxcbiAgICBrZXlib2FyZERpc21pc3NNb2RlOiB0cnVlLFxuICAgIG1haW50YWluVmlzaWJsZUNvbnRlbnRQb3NpdGlvbjogdHJ1ZSxcbiAgICBtYXhpbXVtWm9vbVNjYWxlOiB0cnVlLFxuICAgIG1pbmltdW1ab29tU2NhbGU6IHRydWUsXG4gICAgbmVzdGVkU2Nyb2xsRW5hYmxlZDogdHJ1ZSxcbiAgICBvbk1vbWVudHVtU2Nyb2xsQmVnaW46IHRydWUsXG4gICAgb25Nb21lbnR1bVNjcm9sbEVuZDogdHJ1ZSxcbiAgICBvblNjcm9sbDogdHJ1ZSxcbiAgICBvblNjcm9sbEJlZ2luRHJhZzogdHJ1ZSxcbiAgICBvblNjcm9sbEVuZERyYWc6IHRydWUsXG4gICAgb25TY3JvbGxUb1RvcDogdHJ1ZSxcbiAgICBvdmVyU2Nyb2xsTW9kZTogdHJ1ZSxcbiAgICBwYWdpbmdFbmFibGVkOiB0cnVlLFxuICAgIHBlcnNpc3RlbnRTY3JvbGxiYXI6IHRydWUsXG4gICAgcGluY2hHZXN0dXJlRW5hYmxlZDogdHJ1ZSxcbiAgICBzY3JvbGxFbmFibGVkOiB0cnVlLFxuICAgIHNjcm9sbEV2ZW50VGhyb3R0bGU6IHRydWUsXG4gICAgc2Nyb2xsSW5kaWNhdG9ySW5zZXRzOiB7XG4gICAgICBkaWZmOiByZXF1aXJlKCcuLi8uLi9VdGlsaXRpZXMvZGlmZmVyL3BvaW50c0RpZmZlcicpLFxuICAgIH0sXG4gICAgc2Nyb2xsUGVyZlRhZzogdHJ1ZSxcbiAgICBzY3JvbGxUb092ZXJmbG93RW5hYmxlZDogdHJ1ZSxcbiAgICBzY3JvbGxzVG9Ub3A6IHRydWUsXG4gICAgc2VuZE1vbWVudHVtRXZlbnRzOiB0cnVlLFxuICAgIHNob3dzSG9yaXpvbnRhbFNjcm9sbEluZGljYXRvcjogdHJ1ZSxcbiAgICBzaG93c1ZlcnRpY2FsU2Nyb2xsSW5kaWNhdG9yOiB0cnVlLFxuICAgIHNuYXBUb0FsaWdubWVudDogdHJ1ZSxcbiAgICBzbmFwVG9FbmQ6IHRydWUsXG4gICAgc25hcFRvSW50ZXJ2YWw6IHRydWUsXG4gICAgc25hcFRvT2Zmc2V0czogdHJ1ZSxcbiAgICBzbmFwVG9TdGFydDogdHJ1ZSxcbiAgICB6b29tU2NhbGU6IHRydWUsXG4gIH0sXG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IChTY3JvbGxWaWV3Vmlld0NvbmZpZzogR2VuZXJhdGVkVmlld0NvbmZpZyk7XG4iXX0=