{"version":3,"sources":["Stack.test.tsx"],"names":["describe","it","findByText","homePageTitle","expect","toBeTruthy","button","fireEvent","press","cartPageTitle","backButton"],"mappings":";;;;AAAA;;AACA;;;;AAEAA,QAAQ,CAAC,sBAAD,EAAyB,YAAM;AACrCC,EAAAA,EAAE,CAAC,yCAAD,EAA4C;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,sBACvB,mBAAO,qBAAC,cAAD,KAAP,CADuB,EACrCC,UADqC,WACrCA,UADqC;AAAA;AAAA,8CAEhBA,UAAU,CAAC,aAAD,CAFM;;AAAA;AAEtCC,YAAAA,aAFsC;AAG5CC,YAAAA,MAAM,CAACD,aAAD,CAAN,CAAsBE,UAAtB;;AAH4C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA5C,CAAF;AAMAJ,EAAAA,EAAE,CAAC,yDAAD,EAA4D;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,uBACvC,mBAAO,qBAAC,cAAD,KAAP,CADuC,EACrDC,UADqD,YACrDA,UADqD;AAAA;AAAA,8CAEvCA,UAAU,CAAC,QAAD,CAF6B;;AAAA;AAEtDI,YAAAA,MAFsD;;AAG5DC,6BAAUC,KAAV,CAAgBF,MAAhB;;AAH4D;AAAA,8CAIhCJ,UAAU,CAAC,YAAD,CAJsB;;AAAA;AAItDO,YAAAA,aAJsD;AAK5DL,YAAAA,MAAM,CAACK,aAAD,CAAN,CAAsBJ,UAAtB;;AAL4D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA5D,CAAF;AAQAJ,EAAAA,EAAE,CAAC,sDAAD,EAAyD;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,uBACpC,mBAAO,qBAAC,cAAD,KAAP,CADoC,EAClDC,UADkD,YAClDA,UADkD;AAAA;AAAA,8CAE7BA,UAAU,CAAC,aAAD,CAFmB;;AAAA;AAEnDC,YAAAA,aAFmD;AAAA;AAAA,8CAGpCD,UAAU,CAAC,QAAD,CAH0B;;AAAA;AAGnDI,YAAAA,MAHmD;;AAIzDC,6BAAUC,KAAV,CAAgBF,MAAhB;;AAJyD;AAAA,8CAKhCJ,UAAU,CAAC,OAAD,CALsB;;AAAA;AAKnDQ,YAAAA,UALmD;;AAMzDH,6BAAUC,KAAV,CAAgBE,UAAhB;;AACAN,YAAAA,MAAM,CAACD,aAAD,CAAN,CAAsBE,UAAtB;;AAPyD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAzD,CAAF;AASD,CAxBO,CAAR","sourcesContent":["import {render, fireEvent, waitFor} from '../../utils'\nimport StackRouter from '../../../routing/Stack'\n\ndescribe('routing -> <Stack />', () => {\n  it('renders the home screen on first render', async () => {\n    const {findByText} = render(<StackRouter />)\n    const homePageTitle = await findByText(/To Go Menu/i)\n    expect(homePageTitle).toBeTruthy()\n  })\n\n  it('renders the cart screen when the cart button is pressed', async () => {\n    const {findByText} = render(<StackRouter />)\n    const button = await findByText(/Cart:/i)\n    fireEvent.press(button)\n    const cartPageTitle = await findByText(/Your Cart/i)\n    expect(cartPageTitle).toBeTruthy()\n  })\n\n  it('should go back to home screen when \"back\" is pressed', async () => {\n    const {findByText} = render(<StackRouter />)\n    const homePageTitle = await findByText(/To Go Menu/i)\n    const button = await findByText(/Cart:/i)\n    fireEvent.press(button)\n    const backButton = await findByText(/Back/i)\n    fireEvent.press(backButton)\n    expect(homePageTitle).toBeTruthy()\n  })\n})\n"]}