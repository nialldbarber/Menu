{"version":3,"sources":["../src/index.tsx"],"names":["freeze","children","promiseCache","useRef","React","Fragment","Freeze","placeholder","Suspense","fallback"],"mappings":";;;;;;;;AAOA,SAAA,SAAA,CAAA,IAAA,EAAA;MACEA,MAAAA,GAAAA,IAAAA,CAAAA,M;MACAC,QAAAA,GAAAA,IAAAA,CAAAA,Q;AAKA,MAAMC,YAAY,GAAGC,KAAAA,CAAAA,MAAAA,CAAAA,EAAAA,EAArB,OAAA;;AACA,MAAIH,MAAM,IAAI,CAACE,YAAY,CAA3B,OAAA,EAAqC;AACnCA,IAAAA,YAAY,CAAZA,OAAAA,GAAuB,IAAA,OAAA,CAAY,UAAA,GAAA,EAAA;AACjCA,MAAAA,YAAY,CAAZA,OAAAA,GAAAA,GAAAA;AADFA,KAAuB,CAAvBA;AAGA,UAAMA,YAAY,CAAlB,OAAA;AAJF,GAAA,MAKO,IAAA,MAAA,EAAY;AACjB,UAAMA,YAAY,CAAlB,OAAA;AADK,GAAA,MAEA,IAAIA,YAAY,CAAhB,OAAA,EAA0B;AAC/BA,IAAAA,YAAY,CAAZA,OAAAA;AACAA,IAAAA,YAAY,CAAZA,OAAAA,GAAAA,SAAAA;AACD;;AAED,SAAOE,cAAAA,CAAAA,aAAAA,CAACC,KAAAA,CAADD,QAAAA,EAAAA,IAAAA,EAAP,QAAOA,CAAP;AACD;;SAQeE,M,CAAAA,K,EAAAA;MAASN,MAAAA,GAAAA,KAAAA,CAAAA,M;MAAQC,QAAAA,GAAAA,KAAAA,CAAAA,Q;gCAAUM,W;MAAAA,WAAAA,GAAAA,iBAAAA,KAAAA,KAAAA,CAAAA,GAAc,IAAdA,GAAc,iB;AACvD,SACE,cAAA,CAAA,aAAA,CAACC,KAAAA,CAAD,QAAA,EAAA;AAAUC,IAAAA,QAAQ,EAAEF;AAApB,GAAA,EACE,cAAA,CAAA,aAAA,CAAA,SAAA,EAAA;AAAWP,IAAAA,MAAM,EAAEA;AAAnB,GAAA,EAFJ,QAEI,CADF,CADF;AAKD","sourcesContent":["import React, { useRef, Suspense, Fragment } from \"react\";\n\ninterface StorageRef {\n  promise?: Promise<void>;\n  resolve?: (value: void | PromiseLike<void>) => void;\n}\n\nfunction Suspender({\n  freeze,\n  children,\n}: {\n  freeze: boolean;\n  children: React.ReactNode;\n}) {\n  const promiseCache = useRef<StorageRef>({}).current;\n  if (freeze && !promiseCache.promise) {\n    promiseCache.promise = new Promise((res) => {\n      promiseCache.resolve = res;\n    });\n    throw promiseCache.promise;\n  } else if (freeze) {\n    throw promiseCache.promise;\n  } else if (promiseCache.promise) {\n    promiseCache.resolve!();\n    promiseCache.promise = undefined;\n  }\n\n  return <Fragment>{children}</Fragment>;\n}\n\ninterface Props {\n  freeze: boolean;\n  children: React.ReactNode;\n  placeholder?: React.ReactNode;\n}\n\nexport function Freeze({ freeze, children, placeholder = null }: Props) {\n  return (\n    <Suspense fallback={placeholder}>\n      <Suspender freeze={freeze}>{children}</Suspender>\n    </Suspense>\n  );\n}\n"]}