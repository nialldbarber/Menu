{"version":3,"sources":["Item.test.tsx"],"names":["describe","it","getByText","testName","expect","toBeDefined","testPrice"],"mappings":"AAAA;;AACA;;;;AAEAA,QAAQ,CAAC,wBAAD,EAA2B,YAAM;AACvCC,EAAAA,EAAE,CAAC,yCAAD,EAA4C,YAAM;AAClD,kBAAoB,mBAAO,qBAAC,UAAD;AAAM,MAAA,IAAI,EAAC;AAAX,MAAP,CAApB;AAAA,QAAOC,SAAP,WAAOA,SAAP;;AACA,QAAMC,QAAQ,GAAGD,SAAS,CAAC,SAAD,CAA1B;AACAE,IAAAA,MAAM,CAACD,QAAD,CAAN,CAAiBE,WAAjB;AACD,GAJC,CAAF;AAMAJ,EAAAA,EAAE,CAAC,0CAAD,EAA6C,YAAM;AACnD,mBAAoB,mBAAO,qBAAC,UAAD;AAAM,MAAA,KAAK,EAAE;AAAb,MAAP,CAApB;AAAA,QAAOC,SAAP,YAAOA,SAAP;;AACA,QAAMI,SAAS,GAAGJ,SAAS,CAAC,OAAD,CAA3B;AACAE,IAAAA,MAAM,CAACE,SAAD,CAAN,CAAkBD,WAAlB;AACD,GAJC,CAAF;AAKD,CAZO,CAAR","sourcesContent":["import {render} from '../../utils'\nimport {Item} from '../../../components/Item'\n\ndescribe('components -> <Item />', () => {\n  it('render the food name if one is provided', () => {\n    const {getByText} = render(<Item name=\"testing\" />)\n    const testName = getByText('testing')\n    expect(testName).toBeDefined()\n  })\n\n  it('render the food price if one is provided', () => {\n    const {getByText} = render(<Item price={12345} />)\n    const testPrice = getByText('12345')\n    expect(testPrice).toBeDefined()\n  })\n})\n"]}