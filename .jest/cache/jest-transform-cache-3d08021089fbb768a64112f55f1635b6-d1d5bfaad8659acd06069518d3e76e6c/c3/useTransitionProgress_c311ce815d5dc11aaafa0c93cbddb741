240db0a445d438ad8ec6132a5a1f8298
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = useTransitionProgress;

var React = _interopRequireWildcard(require("react"));

var _TransitionProgressContext = _interopRequireDefault(require("./TransitionProgressContext"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}

function _getRequireWildcardCache() {
  if (typeof WeakMap !== "function") return null;
  var cache = new WeakMap();

  _getRequireWildcardCache = function _getRequireWildcardCache() {
    return cache;
  };

  return cache;
}

function _interopRequireWildcard(obj) {
  if (obj && obj.__esModule) {
    return obj;
  }

  if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
    return {
      default: obj
    };
  }

  var cache = _getRequireWildcardCache();

  if (cache && cache.has(obj)) {
    return cache.get(obj);
  }

  var newObj = {};
  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;

  for (var key in obj) {
    if (Object.prototype.hasOwnProperty.call(obj, key)) {
      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;

      if (desc && (desc.get || desc.set)) {
        Object.defineProperty(newObj, key, desc);
      } else {
        newObj[key] = obj[key];
      }
    }
  }

  newObj.default = obj;

  if (cache) {
    cache.set(obj, newObj);
  }

  return newObj;
}

function useTransitionProgress() {
  var progress = React.useContext(_TransitionProgressContext.default);

  if (progress === undefined) {
    throw new Error("Couldn't find values for transition progress. Are you inside a screen in Native Stack?");
  }

  return progress;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZVRyYW5zaXRpb25Qcm9ncmVzcy50c3giXSwibmFtZXMiOlsicHJvZ3Jlc3MiLCJSZWFjdCIsIlRyYW5zaXRpb25Qcm9ncmVzc0NvbnRleHQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQSxJQUFBLEtBQUEsR0FBQSx1QkFBQSxDQUFBLE9BQUEsQ0FBQSxPQUFBLENBQUEsQ0FBQTs7QUFFQSxJQUFBLDBCQUFBLEdBQUEsc0JBQUEsQ0FBQSxPQUFBLCtCQUFBLENBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUVlLFNBQUEscUJBQUEsR0FBaUM7QUFDOUMsTUFBTUEsUUFBUSxHQUFHQyxLQUFLLENBQUxBLFVBQUFBLENBQWlCQywwQkFBQUEsQ0FBbEMsT0FBaUJELENBQWpCOztBQUVBLE1BQUlELFFBQVEsS0FBWixTQUFBLEVBQTRCO0FBQzFCLFVBQU0sSUFBQSxLQUFBLENBQU4sd0ZBQU0sQ0FBTjtBQUdEOztBQUVELFNBQUEsUUFBQTtBQUNEIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xuXG5pbXBvcnQgVHJhbnNpdGlvblByb2dyZXNzQ29udGV4dCBmcm9tICcuL1RyYW5zaXRpb25Qcm9ncmVzc0NvbnRleHQnO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiB1c2VUcmFuc2l0aW9uUHJvZ3Jlc3MoKSB7XG4gIGNvbnN0IHByb2dyZXNzID0gUmVhY3QudXNlQ29udGV4dChUcmFuc2l0aW9uUHJvZ3Jlc3NDb250ZXh0KTtcblxuICBpZiAocHJvZ3Jlc3MgPT09IHVuZGVmaW5lZCkge1xuICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgIFwiQ291bGRuJ3QgZmluZCB2YWx1ZXMgZm9yIHRyYW5zaXRpb24gcHJvZ3Jlc3MuIEFyZSB5b3UgaW5zaWRlIGEgc2NyZWVuIGluIE5hdGl2ZSBTdGFjaz9cIlxuICAgICk7XG4gIH1cblxuICByZXR1cm4gcHJvZ3Jlc3M7XG59XG4iXX0=