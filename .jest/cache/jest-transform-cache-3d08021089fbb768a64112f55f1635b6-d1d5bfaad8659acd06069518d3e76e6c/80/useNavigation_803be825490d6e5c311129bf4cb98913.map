{"version":3,"sources":["useNavigation.tsx"],"names":["root","React","NavigationContainerRefContext","navigation","NavigationContext"],"mappings":";;;;;;;AAAA,IAAA,KAAA,GAAA,uBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AAEA,IAAA,8BAAA,GAAA,sBAAA,CAAA,OAAA,mCAAA,CAAA;;AACA,IAAA,kBAAA,GAAA,sBAAA,CAAA,OAAA,uBAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQe,SAAA,aAAA,GAER;AACL,MAAMA,IAAI,GAAGC,KAAK,CAALA,UAAAA,CAAiBC,8BAAAA,CAA9B,OAAaD,CAAb;AACA,MAAME,UAAU,GAAGF,KAAK,CAALA,UAAAA,CAAiBG,kBAAAA,CAApC,OAAmBH,CAAnB;;AAEA,MAAIE,UAAU,KAAVA,SAAAA,IAA4BH,IAAI,KAApC,SAAA,EAAoD;AAClD,UAAM,IAAA,KAAA,CAAN,kFAAM,CAAN;AALG;;AAWL,SAAQG,UAAR,KAAA,IAAQA,IAAAA,UAAR,KAAA,KAAA,CAAQA,GAAR,UAAQA,GAAR,IAAA;AACD","sourcesContent":["import * as React from 'react';\n\nimport NavigationContainerRefContext from './NavigationContainerRefContext';\nimport NavigationContext from './NavigationContext';\nimport type { NavigationProp } from './types';\n\n/**\n * Hook to access the navigation prop of the parent screen anywhere.\n *\n * @returns Navigation prop of the parent screen.\n */\nexport default function useNavigation<\n  T = NavigationProp<ReactNavigation.RootParamList>\n>(): T {\n  const root = React.useContext(NavigationContainerRefContext);\n  const navigation = React.useContext(NavigationContext);\n\n  if (navigation === undefined && root === undefined) {\n    throw new Error(\n      \"Couldn't find a navigation object. Is your component inside NavigationContainer?\"\n    );\n  }\n\n  // FIXME: Figure out a better way to do this\n  return (navigation ?? root) as unknown as T;\n}\n"]}