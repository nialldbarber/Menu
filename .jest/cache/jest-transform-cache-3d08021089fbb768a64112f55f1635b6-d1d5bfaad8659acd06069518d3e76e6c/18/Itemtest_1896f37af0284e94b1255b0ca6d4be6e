9a265bb9e321e22a04abfbc043d022df
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _utils = require("../../utils");

var _Item = require("../../../components/Item");

var _jsxRuntime = require("react/jsx-runtime");

describe('components -> <Item />', function () {
  it('render the food name if one is provided', function () {
    var _render = (0, _utils.render)((0, _jsxRuntime.jsx)(_Item.Item, {
      name: "testing"
    })),
        getByText = _render.getByText;

    var testName = getByText('testing');
    expect(testName).toBeDefined();
  });
  it('render the food price if one is provided', function () {
    var _render2 = (0, _utils.render)((0, _jsxRuntime.jsx)(_Item.Item, {
      price: 12345
    })),
        getByText = _render2.getByText;

    var testPrice = getByText('12345');
    expect(testPrice).toBeDefined();
  });
  it('on first render, the button text should say "Add to cart"', function () {
    var _render3 = (0, _utils.render)((0, _jsxRuntime.jsx)(_Item.Item, {})),
        getByText = _render3.getByText;

    var defaultButtonText = getByText('Add to cart');
    expect(defaultButtonText).toBeDefined();
  });
  it('should render "Remove from cart" when button is pressed', function _callee() {
    var _render4, getByText, button;

    return _regenerator.default.async(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            _render4 = (0, _utils.render)((0, _jsxRuntime.jsx)(_Item.Item, {})), getByText = _render4.getByText;
            button = getByText('Add to cart');

            _utils.fireEvent.press(button);

            _context.next = 5;
            return _regenerator.default.awrap((0, _utils.waitFor)(function () {
              return expect(getByText('Remove from cart')).toBeTruthy();
            }));

          case 5:
          case "end":
            return _context.stop();
        }
      }
    }, null, null, null, Promise);
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkl0ZW0udGVzdC50c3giXSwibmFtZXMiOlsiZGVzY3JpYmUiLCJpdCIsImdldEJ5VGV4dCIsInRlc3ROYW1lIiwiZXhwZWN0IiwidG9CZURlZmluZWQiLCJ0ZXN0UHJpY2UiLCJkZWZhdWx0QnV0dG9uVGV4dCIsImJ1dHRvbiIsImZpcmVFdmVudCIsInByZXNzIiwidG9CZVRydXRoeSJdLCJtYXBwaW5ncyI6Ijs7OztBQUFBOztBQUNBOzs7O0FBRUFBLFFBQVEsQ0FBQyx3QkFBRCxFQUEyQixZQUFNO0FBQ3ZDQyxFQUFBQSxFQUFFLENBQUMseUNBQUQsRUFBNEMsWUFBTTtBQUNsRCxrQkFBb0IsbUJBQU8scUJBQUMsVUFBRDtBQUFNLE1BQUEsSUFBSSxFQUFDO0FBQVgsTUFBUCxDQUFwQjtBQUFBLFFBQU9DLFNBQVAsV0FBT0EsU0FBUDs7QUFDQSxRQUFNQyxRQUFRLEdBQUdELFNBQVMsQ0FBQyxTQUFELENBQTFCO0FBQ0FFLElBQUFBLE1BQU0sQ0FBQ0QsUUFBRCxDQUFOLENBQWlCRSxXQUFqQjtBQUNELEdBSkMsQ0FBRjtBQU1BSixFQUFBQSxFQUFFLENBQUMsMENBQUQsRUFBNkMsWUFBTTtBQUNuRCxtQkFBb0IsbUJBQU8scUJBQUMsVUFBRDtBQUFNLE1BQUEsS0FBSyxFQUFFO0FBQWIsTUFBUCxDQUFwQjtBQUFBLFFBQU9DLFNBQVAsWUFBT0EsU0FBUDs7QUFDQSxRQUFNSSxTQUFTLEdBQUdKLFNBQVMsQ0FBQyxPQUFELENBQTNCO0FBQ0FFLElBQUFBLE1BQU0sQ0FBQ0UsU0FBRCxDQUFOLENBQWtCRCxXQUFsQjtBQUNELEdBSkMsQ0FBRjtBQU1BSixFQUFBQSxFQUFFLENBQUMsMkRBQUQsRUFBOEQsWUFBTTtBQUNwRSxtQkFBb0IsbUJBQU8scUJBQUMsVUFBRCxLQUFQLENBQXBCO0FBQUEsUUFBT0MsU0FBUCxZQUFPQSxTQUFQOztBQUNBLFFBQU1LLGlCQUFpQixHQUFHTCxTQUFTLENBQUMsYUFBRCxDQUFuQztBQUNBRSxJQUFBQSxNQUFNLENBQUNHLGlCQUFELENBQU4sQ0FBMEJGLFdBQTFCO0FBQ0QsR0FKQyxDQUFGO0FBTUFKLEVBQUFBLEVBQUUsQ0FBQyx5REFBRCxFQUE0RDtBQUFBOztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsdUJBQ3hDLG1CQUFPLHFCQUFDLFVBQUQsS0FBUCxDQUR3QyxFQUNyREMsU0FEcUQsWUFDckRBLFNBRHFEO0FBRXRETSxZQUFBQSxNQUZzRCxHQUU3Q04sU0FBUyxDQUFDLGFBQUQsQ0FGb0M7O0FBRzVETyw2QkFBVUMsS0FBVixDQUFnQkYsTUFBaEI7O0FBSDREO0FBQUEsOENBSXRELG9CQUFRO0FBQUEscUJBQU1KLE1BQU0sQ0FBQ0YsU0FBUyxDQUFDLGtCQUFELENBQVYsQ0FBTixDQUFzQ1MsVUFBdEMsRUFBTjtBQUFBLGFBQVIsQ0FKc0Q7O0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsR0FBNUQsQ0FBRjtBQU1ELENBekJPLENBQVIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge3JlbmRlciwgZmlyZUV2ZW50LCB3YWl0Rm9yfSBmcm9tICcuLi8uLi91dGlscydcbmltcG9ydCB7SXRlbX0gZnJvbSAnLi4vLi4vLi4vY29tcG9uZW50cy9JdGVtJ1xuXG5kZXNjcmliZSgnY29tcG9uZW50cyAtPiA8SXRlbSAvPicsICgpID0+IHtcbiAgaXQoJ3JlbmRlciB0aGUgZm9vZCBuYW1lIGlmIG9uZSBpcyBwcm92aWRlZCcsICgpID0+IHtcbiAgICBjb25zdCB7Z2V0QnlUZXh0fSA9IHJlbmRlcig8SXRlbSBuYW1lPVwidGVzdGluZ1wiIC8+KVxuICAgIGNvbnN0IHRlc3ROYW1lID0gZ2V0QnlUZXh0KCd0ZXN0aW5nJylcbiAgICBleHBlY3QodGVzdE5hbWUpLnRvQmVEZWZpbmVkKClcbiAgfSlcblxuICBpdCgncmVuZGVyIHRoZSBmb29kIHByaWNlIGlmIG9uZSBpcyBwcm92aWRlZCcsICgpID0+IHtcbiAgICBjb25zdCB7Z2V0QnlUZXh0fSA9IHJlbmRlcig8SXRlbSBwcmljZT17MTIzNDV9IC8+KVxuICAgIGNvbnN0IHRlc3RQcmljZSA9IGdldEJ5VGV4dCgnMTIzNDUnKVxuICAgIGV4cGVjdCh0ZXN0UHJpY2UpLnRvQmVEZWZpbmVkKClcbiAgfSlcblxuICBpdCgnb24gZmlyc3QgcmVuZGVyLCB0aGUgYnV0dG9uIHRleHQgc2hvdWxkIHNheSBcIkFkZCB0byBjYXJ0XCInLCAoKSA9PiB7XG4gICAgY29uc3Qge2dldEJ5VGV4dH0gPSByZW5kZXIoPEl0ZW0gLz4pXG4gICAgY29uc3QgZGVmYXVsdEJ1dHRvblRleHQgPSBnZXRCeVRleHQoJ0FkZCB0byBjYXJ0JylcbiAgICBleHBlY3QoZGVmYXVsdEJ1dHRvblRleHQpLnRvQmVEZWZpbmVkKClcbiAgfSlcblxuICBpdCgnc2hvdWxkIHJlbmRlciBcIlJlbW92ZSBmcm9tIGNhcnRcIiB3aGVuIGJ1dHRvbiBpcyBwcmVzc2VkJywgYXN5bmMgKCkgPT4ge1xuICAgIGNvbnN0IHtnZXRCeVRleHR9ID0gcmVuZGVyKDxJdGVtIC8+KVxuICAgIGNvbnN0IGJ1dHRvbiA9IGdldEJ5VGV4dCgnQWRkIHRvIGNhcnQnKVxuICAgIGZpcmVFdmVudC5wcmVzcyhidXR0b24pXG4gICAgYXdhaXQgd2FpdEZvcigoKSA9PiBleHBlY3QoZ2V0QnlUZXh0KCdSZW1vdmUgZnJvbSBjYXJ0JykpLnRvQmVUcnV0aHkoKSlcbiAgfSlcbn0pXG4iXX0=