{"version":3,"sources":["HeaderConfig.tsx"],"names":["headerBackTitleVisible","canGoBack","insets","colors","tintColor","headerTintColor","Platform","headerBackTitleStyleFlattened","StyleSheet","headerLargeTitleStyleFlattened","headerTitleStyleFlattened","headerStyleFlattened","headerLargeStyleFlattened","titleText","title","route","titleColor","titleFontSize","titleFontWeight","headerTitleStyleSupported","color","headerLeftElement","headerLeft","label","headerRightElement","headerRight","headerTitleElement","headerTitle","children","headerSearchBarOptions","SearchBar","backButtonInCustomView","headerBackVisible","headerTransparent","I18nManager","headerBackButtonMenuEnabled","headerShown","headerShadowVisible","headerLargeTitleShadowVisible","styles","row","headerBackImageSource","flexDirection","alignItems"],"mappings":";;;;;;;;;;;AAAA,IAAA,SAAA,GAAA,OAAA,CAAA,4BAAA,CAAA;;AACA,IAAA,OAAA,GAAA,OAAA,CAAA,0BAAA,CAAA;;AACA,IAAA,KAAA,GAAA,uBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AACA,IAAA,YAAA,GAAA,OAAA,CAAA,cAAA,CAAA;;AAOA,IAAA,2BAAA,GAAA,OAAA,CAAA,gCAAA,CAAA;;AACA,IAAA,mBAAA,GAAA,OAAA,CAAA,sBAAA,CAAA;;AAWA,IAAA,cAAA,GAAA,OAAA,mBAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOe,SAAA,YAAA,QA0BQ;AAAA,MA1Bc,qBA0Bd,SA1Bc,qBA0Bd;AAAA,MA1Bc,2BA0Bd,SA1Bc,2BA0Bd;AAAA,MA1Bc,eA0Bd,SA1Bc,eA0Bd;AAAA,MA1Bc,oBA0Bd,SA1Bc,oBA0Bd;AAAA,oCArBrBA,sBAqBqB;AAAA,MArBrBA,sBAqBqB,sCA1Bc,IA0Bd;AAAA,MA1Bc,iBA0Bd,SA1Bc,iBA0Bd;AAAA,MA1Bc,mBA0Bd,SA1Bc,mBA0Bd;AAAA,MA1Bc,gBA0Bd,SA1Bc,gBA0Bd;AAAA,MA1Bc,gBA0Bd,SA1Bc,gBA0Bd;AAAA,MA1Bc,6BA0Bd,SA1Bc,6BA0Bd;AAAA,MA1Bc,qBA0Bd,SA1Bc,qBA0Bd;AAAA,MA1Bc,UA0Bd,SA1Bc,UA0Bd;AAAA,MA1Bc,WA0Bd,SA1Bc,WA0Bd;AAAA,MA1Bc,WA0Bd,SA1Bc,WA0Bd;AAAA,MA1Bc,WA0Bd,SA1Bc,WA0Bd;AAAA,MA1Bc,gBA0Bd,SA1Bc,gBA0Bd;AAAA,MA1Bc,eA0Bd,SA1Bc,eA0Bd;AAAA,MA1Bc,WA0Bd,SA1Bc,WA0Bd;AAAA,MA1Bc,gBA0Bd,SA1Bc,gBA0Bd;AAAA,MA1Bc,gBA0Bd,SA1Bc,gBA0Bd;AAAA,MA1Bc,iBA0Bd,SA1Bc,iBA0Bd;AAAA,MA1Bc,sBA0Bd,SA1Bc,sBA0Bd;AAAA,MA1Bc,KA0Bd,SA1Bc,KA0Bd;AAAA,MA1Bc,KA0Bd,SA1Bc,KA0Bd;AAAA,MADrBC,SACqB,SADrBA,SACqB;;AAAA,MAAA,IAAA,EAAA,qBAAA,EAAA,qBAAA;;AACrB,MAAMC,MAAM,GAAG,CAAA,GAAA,2BAAA,CAAf,iBAAe,GAAf;;AACA,cAAmB,CAAA,GAAA,OAAA,CAAnB,QAAmB,GAAnB;AAAA,MAAQC,MAAR,SAAQA,MAAR;;AACA,MAAMC,SAAS,GACbC,eADa,KAAA,IACbA,IAAAA,eADa,KAAA,KAAA,CACbA,GADa,eACbA,GAAoBC,YAAAA,CAAAA,QAAAA,CAAAA,EAAAA,KAAAA,KAAAA,GAAwBH,MAAM,CAA9BG,OAAAA,GAAyCH,MAAM,CADrE,IAAA;AAGA,MAAMI,6BAA6B,GACjCC,YAAAA,CAAAA,UAAAA,CAAAA,OAAAA,CAAAA,oBAAAA,KADF,EAAA;AAEA,MAAMC,8BAA8B,GAClCD,YAAAA,CAAAA,UAAAA,CAAAA,OAAAA,CAAAA,qBAAAA,KADF,EAAA;AAEA,MAAME,yBAAyB,GAAGF,YAAAA,CAAAA,UAAAA,CAAAA,OAAAA,CAAAA,gBAAAA,KAAlC,EAAA;AACA,MAAMG,oBAAoB,GAAGH,YAAAA,CAAAA,UAAAA,CAAAA,OAAAA,CAAAA,WAAAA,KAA7B,EAAA;AACA,MAAMI,yBAAyB,GAAGJ,YAAAA,CAAAA,UAAAA,CAAAA,OAAAA,CAAAA,gBAAAA,KAAlC,EAAA;;AAEA,cACE,CAAA,GAAA,cAAA,CAAA,YAAA,EAAa,CACXD,6BAA6B,CADlB,UAAA,EAEXE,8BAA8B,CAFnB,UAAA,EAGXC,yBAAyB,CAJ7B,UACe,CAAb,CADF;AAAA;AAAA,MAAM,mBAAN;AAAA,MAAM,oBAAN;AAAA,MAAM,eAAN;;AAOA,MAAMG,SAAS,GAAGC,KAAK,KAALA,SAAAA,GAAAA,KAAAA,GAA8BC,KAAK,CAArD,IAAA;AACA,MAAMC,UAAU,GAAA,CAAA,IAAA,GAAA,CAAA,qBAAA,GACdN,yBAAyB,CADX,KAAA,MAAA,IAAA,IAAA,qBAAA,KAAA,KAAA,CAAA,GAAA,qBAAA,GAAA,eAAA,MAAA,IAAA,IAAA,IAAA,KAAA,KAAA,CAAA,GAAA,IAAA,GACwCP,MAAM,CAD9D,IAAA;AAEA,MAAMc,aAAa,GAAGP,yBAAyB,CAA/C,QAAA;AACA,MAAMQ,eAAe,GAAGR,yBAAyB,CAAjD,UAAA;AAEA,MAAMS,yBAAoC,GAAG;AAAEC,IAAAA,KAAK,EAAEJ;AAAT,GAA7C;;AAEA,MAAIN,yBAAyB,CAAzBA,UAAAA,IAAJ,IAAA,EAAkD;AAChDS,IAAAA,yBAAyB,CAAzBA,UAAAA,GAAuCT,yBAAyB,CAAhES,UAAAA;AACD;;AAED,MAAIF,aAAa,IAAjB,IAAA,EAA2B;AACzBE,IAAAA,yBAAyB,CAAzBA,QAAAA,GAAAA,aAAAA;AACD;;AAED,MAAID,eAAe,IAAnB,IAAA,EAA6B;AAC3BC,IAAAA,yBAAyB,CAAzBA,UAAAA,GAAAA,eAAAA;AACD;;AAED,MAAME,iBAAiB,GAAGC,UAAH,KAAA,IAAGA,IAAAA,UAAH,KAAA,KAAA,CAAGA,GAAH,KAAA,CAAGA,GAAAA,UAAU,CAAG;AACrClB,IAAAA,SADqC,EACrCA,SADqC;AAErCmB,IAAAA,KAAK,EAFgC,eAAA;AAGrCtB,IAAAA,SAAAA,EAAAA;AAHqC,GAAH,CAApC;AAKA,MAAMuB,kBAAkB,GAAGC,WAAH,KAAA,IAAGA,IAAAA,WAAH,KAAA,KAAA,CAAGA,GAAH,KAAA,CAAGA,GAAAA,WAAW,CAAG;AAAErB,IAAAA,SAAAA,EAAAA;AAAF,GAAH,CAAtC;AACA,MAAMsB,kBAAkB,GACtB,OAAA,WAAA,KAAA,UAAA,GACIC,WAAW,CAAC;AAAEvB,IAAAA,SAAF,EAAEA,SAAF;AAAawB,IAAAA,QAAQ,EAAEf;AAAvB,GAAD,CADf,GADF,IAAA;;AAKA,MACEP,YAAAA,CAAAA,QAAAA,CAAAA,EAAAA,KAAAA,KAAAA,IACAuB,sBAAsB,IADtBvB,IAAAA,IAEAwB,mBAAAA,CAAAA,SAAAA,IAHF,IAAA,EAIE;AACA,UAAM,IAAN,KAAM,kJAAN;AAGD;;AAOD,MAAMC,sBAAsB,GAAGC,iBAAiB,GAC5CX,iBAAiB,IAD2B,IAAA,GAE5Cf,YAAAA,CAAAA,QAAAA,CAAAA,EAAAA,KAAAA,SAAAA,IAA6BoB,kBAAkB,IAFnD,IAAA;AAIA,SACE,KAAA,CAAA,aAAA,CAAC,mBAAA,CAAD,uBAAA,EAAA;AACE,IAAA,sBAAsB,EADxB,sBAAA;AAEE,IAAA,eAAe,EAAA,CAAA,qBAAA,GACbf,oBAAoB,CADP,eAAA,MAAA,IAAA,IAAA,qBAAA,KAAA,KAAA,CAAA,GAAA,qBAAA,GAEZsB,iBAAiB,GAAA,aAAA,GAAmB9B,MAAM,CAJ/C,IAAA;AAME,IAAA,SAAS,EAAEH,sBAAsB,GAAA,eAAA,GANnC,GAAA;AAOE,IAAA,mBAAmB,EAPrB,mBAAA;AAQE,IAAA,iBAAiB,EAAEO,6BAA6B,CARlD,QAAA;AASE,IAAA,UAAU,EATZ,gBAAA;AAUE,IAAA,KAAK,EAVP,SAAA;AAWE,IAAA,SAAS,EAAE2B,YAAAA,CAAAA,WAAAA,CAAAA,KAAAA,GAAAA,KAAAA,GAXb,KAAA;AAYE,IAAA,qBAAqB,EAAEC,2BAA2B,KAZpD,KAAA;AAaE,IAAA,MAAM,EAAEC,WAAW,KAbrB,KAAA;AAcE,IAAA,cAAc,EAAEJ,iBAAiB,KAdnC,KAAA;AAeE,IAAA,UAAU,EAAEK,mBAAmB,KAfjC,KAAA;AAgBE,IAAA,UAAU,EAhBZ,gBAAA;AAiBE,IAAA,yBAAyB,EAAEzB,yBAAyB,CAjBtD,eAAA;AAkBE,IAAA,eAAe,EAAEH,8BAA8B,CAlBjD,KAAA;AAmBE,IAAA,oBAAoB,EAnBtB,oBAAA;AAoBE,IAAA,kBAAkB,EAAEA,8BAA8B,CApBpD,QAAA;AAqBE,IAAA,oBAAoB,EAAEA,8BAA8B,CArBtD,UAAA;AAsBE,IAAA,oBAAoB,EAAE6B,6BAA6B,KAtBrD,KAAA;AAuBE,IAAA,KAAK,EAAE,OAAA,WAAA,KAAA,QAAA,GAAA,WAAA,GAvBT,SAAA;AAwBE,IAAA,UAAU,EAxBZ,UAAA;AAyBE,IAAA,eAAe,EAzBjB,eAAA;AA0BE,IAAA,aAAa,EA1Bf,aAAA;AA2BE,IAAA,eAAe,EA3BjB,eAAA;AA4BE,IAAA,eAAe,EAAEpC,MAAM,CAANA,GAAAA,KA5BnB,CAAA;AA6BE,IAAA,WAAW,EAET+B,iBAAiB,KAAK;AA/B1B,GAAA,EAkCG3B,YAAAA,CAAAA,QAAAA,CAAAA,EAAAA,KAAAA,KAAAA,GACC,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,QAAA,EAAA,IAAA,EACGe,iBAAiB,IAAjBA,IAAAA,GACC,KAAA,CAAA,aAAA,CAAC,mBAAA,CAAD,yBAAA,EAAA,IAAA,EADDA,iBACC,CADDA,GADH,IAAA,EAMGK,kBAAkB,IAAlBA,IAAAA,GACC,KAAA,CAAA,aAAA,CAAC,mBAAA,CAAD,2BAAA,EAAA,IAAA,EADDA,kBACC,CADDA,GAPJpB,IACC,CADDA,GAcC,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,QAAA,EAAA,IAAA,EACG,iBAAiB,IAAjB,IAAA,IAA6B,OAAA,WAAA,KAA7B,UAAA,GACC,KAAA,CAAA,aAAA,CAAC,mBAAA,CAAD,yBAAA,EAAA,IAAA,EACE,KAAA,CAAA,aAAA,CAAC,YAAA,CAAD,IAAA,EAAA;AAAM,IAAA,KAAK,EAAEiC,MAAM,CAACC;AAApB,GAAA,EAAA,iBAAA,EAEG,gBAAgB,KAAhB,QAAA,GACC,OAAA,WAAA,KAAA,UAAA,GAAA,kBAAA,GAGE,KAAA,CAAA,aAAA,CAAC,SAAA,CAAD,WAAA,EAAA;AACE,IAAA,SAAS,EADX,SAAA;AAEE,IAAA,KAAK,EAAErB;AAFT,GAAA,EAJH,SAIG,CAJH,GAJN,IAEG,CADF,CADD,GADH,IAAA,EAoBG,gBAAgB,KAAhB,QAAA,GACC,KAAA,CAAA,aAAA,CAAC,mBAAA,CAAD,2BAAA,EAAA,IAAA,EACG,OAAA,WAAA,KAAA,UAAA,GAAA,kBAAA,GAGC,KAAA,CAAA,aAAA,CAAC,SAAA,CAAD,WAAA,EAAA;AACE,IAAA,SAAS,EADX,SAAA;AAEE,IAAA,KAAK,EAAEA;AAFT,GAAA,EALL,SAKK,CAJJ,CADD,GApEP,IAgDI,CAhDJ,EAoFG,qBAAqB,KAArB,SAAA,GACC,KAAA,CAAA,aAAA,CAAC,mBAAA,CAAD,gCAAA,EAAA;AAAkC,IAAA,MAAM,EAAEsB;AAA1C,GAAA,CADD,GApFH,IAAA,EAuFGjB,kBAAkB,IAAlBA,IAAAA,GACC,KAAA,CAAA,aAAA,CAAC,mBAAA,CAAD,0BAAA,EAAA,IAAA,EADDA,kBACC,CADDA,GAvFH,IAAA,EA4FGlB,YAAAA,CAAAA,QAAAA,CAAAA,EAAAA,KAAAA,KAAAA,IAAyBuB,sBAAsB,IAA/CvB,IAAAA,GACC,KAAA,CAAA,aAAA,CAAC,mBAAA,CAAD,8BAAA,EAAA,IAAA,EACE,KAAA,CAAA,aAAA,CAAC,mBAAA,CAAD,SAAA,EAFHA,sBAEG,CADF,CADDA,GA7FL,IACE,CADF;AAoGD;;AAED,IAAMiC,MAAM,GAAG,YAAA,CAAA,UAAA,CAAA,MAAA,CAAkB;AAC/BC,EAAAA,GAAG,EAAE;AACHE,IAAAA,aAAa,EADV,KAAA;AAEHC,IAAAA,UAAU,EAAE;AAFT;AAD0B,CAAlB,CAAf","sourcesContent":["import { HeaderTitle } from '@react-navigation/elements';\nimport { Route, useTheme } from '@react-navigation/native';\nimport * as React from 'react';\nimport {\n  I18nManager,\n  Platform,\n  StyleSheet,\n  TextStyle,\n  View,\n} from 'react-native';\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\nimport {\n  ScreenStackHeaderBackButtonImage,\n  ScreenStackHeaderCenterView,\n  ScreenStackHeaderConfig,\n  ScreenStackHeaderLeftView,\n  ScreenStackHeaderRightView,\n  ScreenStackHeaderSearchBarView,\n  SearchBar,\n} from 'react-native-screens';\n\nimport type { NativeStackNavigationOptions } from '../types';\nimport { processFonts } from './FontProcessor';\n\ntype Props = NativeStackNavigationOptions & {\n  route: Route<string>;\n  canGoBack: boolean;\n};\n\nexport default function HeaderConfig({\n  headerBackImageSource,\n  headerBackButtonMenuEnabled,\n  headerBackTitle,\n  headerBackTitleStyle,\n  headerBackTitleVisible = true,\n  headerBackVisible,\n  headerShadowVisible,\n  headerLargeStyle,\n  headerLargeTitle,\n  headerLargeTitleShadowVisible,\n  headerLargeTitleStyle,\n  headerLeft,\n  headerRight,\n  headerShown,\n  headerStyle,\n  headerBlurEffect,\n  headerTintColor,\n  headerTitle,\n  headerTitleAlign,\n  headerTitleStyle,\n  headerTransparent,\n  headerSearchBarOptions,\n  route,\n  title,\n  canGoBack,\n}: Props): JSX.Element {\n  const insets = useSafeAreaInsets();\n  const { colors } = useTheme();\n  const tintColor =\n    headerTintColor ?? (Platform.OS === 'ios' ? colors.primary : colors.text);\n\n  const headerBackTitleStyleFlattened =\n    StyleSheet.flatten(headerBackTitleStyle) || {};\n  const headerLargeTitleStyleFlattened =\n    StyleSheet.flatten(headerLargeTitleStyle) || {};\n  const headerTitleStyleFlattened = StyleSheet.flatten(headerTitleStyle) || {};\n  const headerStyleFlattened = StyleSheet.flatten(headerStyle) || {};\n  const headerLargeStyleFlattened = StyleSheet.flatten(headerLargeStyle) || {};\n\n  const [backTitleFontFamily, largeTitleFontFamily, titleFontFamily] =\n    processFonts([\n      headerBackTitleStyleFlattened.fontFamily,\n      headerLargeTitleStyleFlattened.fontFamily,\n      headerTitleStyleFlattened.fontFamily,\n    ]);\n\n  const titleText = title !== undefined ? title : route.name;\n  const titleColor =\n    headerTitleStyleFlattened.color ?? headerTintColor ?? colors.text;\n  const titleFontSize = headerTitleStyleFlattened.fontSize;\n  const titleFontWeight = headerTitleStyleFlattened.fontWeight;\n\n  const headerTitleStyleSupported: TextStyle = { color: titleColor };\n\n  if (headerTitleStyleFlattened.fontFamily != null) {\n    headerTitleStyleSupported.fontFamily = headerTitleStyleFlattened.fontFamily;\n  }\n\n  if (titleFontSize != null) {\n    headerTitleStyleSupported.fontSize = titleFontSize;\n  }\n\n  if (titleFontWeight != null) {\n    headerTitleStyleSupported.fontWeight = titleFontWeight;\n  }\n\n  const headerLeftElement = headerLeft?.({\n    tintColor,\n    label: headerBackTitle,\n    canGoBack,\n  });\n  const headerRightElement = headerRight?.({ tintColor });\n  const headerTitleElement =\n    typeof headerTitle === 'function'\n      ? headerTitle({ tintColor, children: titleText })\n      : null;\n\n  if (\n    Platform.OS === 'ios' &&\n    headerSearchBarOptions != null &&\n    SearchBar == null\n  ) {\n    throw new Error(\n      `The current version of 'react-native-screens' doesn't support SearchBar in the header. Please update to the latest version to use this option.`\n    );\n  }\n\n  /**\n   * We need to set this in if:\n   * - Back button should stay visible when `headerLeft` is specified\n   * - If `headerTitle` for Android is specified, so we only need to remove the title and keep the back button\n   */\n  const backButtonInCustomView = headerBackVisible\n    ? headerLeftElement != null\n    : Platform.OS === 'android' && headerTitleElement != null;\n\n  return (\n    <ScreenStackHeaderConfig\n      backButtonInCustomView={backButtonInCustomView}\n      backgroundColor={\n        headerStyleFlattened.backgroundColor ??\n        (headerTransparent ? 'transparent' : colors.card)\n      }\n      backTitle={headerBackTitleVisible ? headerBackTitle : ' '}\n      backTitleFontFamily={backTitleFontFamily}\n      backTitleFontSize={headerBackTitleStyleFlattened.fontSize}\n      blurEffect={headerBlurEffect}\n      color={tintColor}\n      direction={I18nManager.isRTL ? 'rtl' : 'ltr'}\n      disableBackButtonMenu={headerBackButtonMenuEnabled === false}\n      hidden={headerShown === false}\n      hideBackButton={headerBackVisible === false}\n      hideShadow={headerShadowVisible === false}\n      largeTitle={headerLargeTitle}\n      largeTitleBackgroundColor={headerLargeStyleFlattened.backgroundColor}\n      largeTitleColor={headerLargeTitleStyleFlattened.color}\n      largeTitleFontFamily={largeTitleFontFamily}\n      largeTitleFontSize={headerLargeTitleStyleFlattened.fontSize}\n      largeTitleFontWeight={headerLargeTitleStyleFlattened.fontWeight}\n      largeTitleHideShadow={headerLargeTitleShadowVisible === false}\n      title={typeof headerTitle === 'string' ? headerTitle : titleText}\n      titleColor={titleColor}\n      titleFontFamily={titleFontFamily}\n      titleFontSize={titleFontSize}\n      titleFontWeight={titleFontWeight}\n      topInsetEnabled={insets.top !== 0}\n      translucent={\n        // This defaults to `true`, so we can't pass `undefined`\n        headerTransparent === true\n      }\n    >\n      {Platform.OS === 'ios' ? (\n        <>\n          {headerLeftElement != null ? (\n            <ScreenStackHeaderLeftView>\n              {headerLeftElement}\n            </ScreenStackHeaderLeftView>\n          ) : null}\n          {headerTitleElement != null ? (\n            <ScreenStackHeaderCenterView>\n              {headerTitleElement}\n            </ScreenStackHeaderCenterView>\n          ) : null}\n        </>\n      ) : (\n        <>\n          {headerLeftElement != null || typeof headerTitle === 'function' ? (\n            <ScreenStackHeaderLeftView>\n              <View style={styles.row}>\n                {headerLeftElement}\n                {headerTitleAlign !== 'center' ? (\n                  typeof headerTitle === 'function' ? (\n                    headerTitleElement\n                  ) : (\n                    <HeaderTitle\n                      tintColor={tintColor}\n                      style={headerTitleStyleSupported}\n                    >\n                      {titleText}\n                    </HeaderTitle>\n                  )\n                ) : null}\n              </View>\n            </ScreenStackHeaderLeftView>\n          ) : null}\n          {headerTitleAlign === 'center' ? (\n            <ScreenStackHeaderCenterView>\n              {typeof headerTitle === 'function' ? (\n                headerTitleElement\n              ) : (\n                <HeaderTitle\n                  tintColor={tintColor}\n                  style={headerTitleStyleSupported}\n                >\n                  {titleText}\n                </HeaderTitle>\n              )}\n            </ScreenStackHeaderCenterView>\n          ) : null}\n        </>\n      )}\n      {headerBackImageSource !== undefined ? (\n        <ScreenStackHeaderBackButtonImage source={headerBackImageSource} />\n      ) : null}\n      {headerRightElement != null ? (\n        <ScreenStackHeaderRightView>\n          {headerRightElement}\n        </ScreenStackHeaderRightView>\n      ) : null}\n      {Platform.OS === 'ios' && headerSearchBarOptions != null ? (\n        <ScreenStackHeaderSearchBarView>\n          <SearchBar {...headerSearchBarOptions} />\n        </ScreenStackHeaderSearchBarView>\n      ) : null}\n    </ScreenStackHeaderConfig>\n  );\n}\n\nconst styles = StyleSheet.create({\n  row: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n});\n"]}