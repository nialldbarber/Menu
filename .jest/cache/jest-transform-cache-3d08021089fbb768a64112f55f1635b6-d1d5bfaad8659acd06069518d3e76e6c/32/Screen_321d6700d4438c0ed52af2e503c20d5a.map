{"version":3,"sources":["Screen.tsx"],"names":["dimensions","insets","isParentHeaderShown","React","HeaderShownContext","parentHeaderHeight","HeaderHeightContext","modal","headerShown","headerStatusBarHeight","style","focused","styles","content","navigation","route","e","height","setHeaderHeight","headerTransparent","container","flex","flexDirection","absolute","position","top","left","right"],"mappings":"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","sourcesContent":["import {\n  NavigationContext,\n  NavigationProp,\n  NavigationRouteContext,\n  ParamListBase,\n  RouteProp,\n} from '@react-navigation/native';\nimport * as React from 'react';\nimport { StyleProp, StyleSheet, View, ViewStyle } from 'react-native';\nimport {\n  useSafeAreaFrame,\n  useSafeAreaInsets,\n} from 'react-native-safe-area-context';\n\nimport Background from './Background';\nimport getDefaultHeaderHeight from './Header/getDefaultHeaderHeight';\nimport HeaderHeightContext from './Header/HeaderHeightContext';\nimport HeaderShownContext from './Header/HeaderShownContext';\n\ntype Props = {\n  focused: boolean;\n  modal?: boolean;\n  navigation: NavigationProp<ParamListBase>;\n  route: RouteProp<ParamListBase>;\n  header: React.ReactNode;\n  headerShown?: boolean;\n  headerStatusBarHeight?: number;\n  headerTransparent?: boolean;\n  style?: StyleProp<ViewStyle>;\n  children: React.ReactNode;\n};\n\nexport default function Screen(props: Props) {\n  const dimensions = useSafeAreaFrame();\n  const insets = useSafeAreaInsets();\n\n  const isParentHeaderShown = React.useContext(HeaderShownContext);\n  const parentHeaderHeight = React.useContext(HeaderHeightContext);\n\n  const {\n    focused,\n    modal = false,\n    header,\n    headerShown = true,\n    headerTransparent,\n    headerStatusBarHeight = isParentHeaderShown ? 0 : insets.top,\n    navigation,\n    route,\n    children,\n    style,\n  } = props;\n\n  const [headerHeight, setHeaderHeight] = React.useState(() =>\n    getDefaultHeaderHeight(dimensions, modal, headerStatusBarHeight)\n  );\n\n  return (\n    <Background\n      accessibilityElementsHidden={!focused}\n      importantForAccessibility={focused ? 'auto' : 'no-hide-descendants'}\n      style={[styles.container, style]}\n    >\n      <View style={styles.content}>\n        <HeaderShownContext.Provider\n          value={isParentHeaderShown || headerShown !== false}\n        >\n          <HeaderHeightContext.Provider\n            value={headerShown ? headerHeight : parentHeaderHeight ?? 0}\n          >\n            {children}\n          </HeaderHeightContext.Provider>\n        </HeaderShownContext.Provider>\n      </View>\n      {headerShown ? (\n        <NavigationContext.Provider value={navigation}>\n          <NavigationRouteContext.Provider value={route}>\n            <View\n              onLayout={(e) => {\n                const { height } = e.nativeEvent.layout;\n\n                setHeaderHeight(height);\n              }}\n              style={headerTransparent ? styles.absolute : null}\n            >\n              {header}\n            </View>\n          </NavigationRouteContext.Provider>\n        </NavigationContext.Provider>\n      ) : null}\n    </Background>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'column-reverse',\n  },\n  // This is necessary to avoid applying 'column-reverse' to screen content\n  content: {\n    flex: 1,\n  },\n  absolute: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n  },\n});\n"]}