8234233092d9943c267c070ad71ff8e5
'use strict';

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _registerGeneratedViewConfig = _interopRequireDefault(require("../../Utilities/registerGeneratedViewConfig"));

var _requireNativeComponent = _interopRequireDefault(require("../../ReactNative/requireNativeComponent"));

var AndroidHorizontalScrollViewViewConfig = {
  uiViewClassName: 'AndroidHorizontalScrollView',
  bubblingEventTypes: {},
  directEventTypes: {},
  validAttributes: {
    decelerationRate: true,
    disableIntervalMomentum: true,
    endFillColor: {
      process: require("../../StyleSheet/processColor")
    },
    fadingEdgeLength: true,
    nestedScrollEnabled: true,
    overScrollMode: true,
    pagingEnabled: true,
    persistentScrollbar: true,
    scrollEnabled: true,
    scrollPerfTag: true,
    sendMomentumEvents: true,
    showsHorizontalScrollIndicator: true,
    snapToEnd: true,
    snapToInterval: true,
    snapToStart: true,
    snapToOffsets: true,
    contentOffset: true
  }
};
var AndroidHorizontalScrollViewNativeComponent;

if (global.RN$Bridgeless) {
  (0, _registerGeneratedViewConfig.default)('AndroidHorizontalScrollView', AndroidHorizontalScrollViewViewConfig);
  AndroidHorizontalScrollViewNativeComponent = 'AndroidHorizontalScrollView';
} else {
  AndroidHorizontalScrollViewNativeComponent = (0, _requireNativeComponent.default)('AndroidHorizontalScrollView');
}

var _default = AndroidHorizontalScrollViewNativeComponent;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkFuZHJvaWRIb3Jpem9udGFsU2Nyb2xsVmlld05hdGl2ZUNvbXBvbmVudC5qcyJdLCJuYW1lcyI6WyJBbmRyb2lkSG9yaXpvbnRhbFNjcm9sbFZpZXdWaWV3Q29uZmlnIiwidWlWaWV3Q2xhc3NOYW1lIiwiYnViYmxpbmdFdmVudFR5cGVzIiwiZGlyZWN0RXZlbnRUeXBlcyIsInZhbGlkQXR0cmlidXRlcyIsImRlY2VsZXJhdGlvblJhdGUiLCJkaXNhYmxlSW50ZXJ2YWxNb21lbnR1bSIsImVuZEZpbGxDb2xvciIsInByb2Nlc3MiLCJyZXF1aXJlIiwiZmFkaW5nRWRnZUxlbmd0aCIsIm5lc3RlZFNjcm9sbEVuYWJsZWQiLCJvdmVyU2Nyb2xsTW9kZSIsInBhZ2luZ0VuYWJsZWQiLCJwZXJzaXN0ZW50U2Nyb2xsYmFyIiwic2Nyb2xsRW5hYmxlZCIsInNjcm9sbFBlcmZUYWciLCJzZW5kTW9tZW50dW1FdmVudHMiLCJzaG93c0hvcml6b250YWxTY3JvbGxJbmRpY2F0b3IiLCJzbmFwVG9FbmQiLCJzbmFwVG9JbnRlcnZhbCIsInNuYXBUb1N0YXJ0Iiwic25hcFRvT2Zmc2V0cyIsImNvbnRlbnRPZmZzZXQiLCJBbmRyb2lkSG9yaXpvbnRhbFNjcm9sbFZpZXdOYXRpdmVDb21wb25lbnQiLCJnbG9iYWwiLCJSTiRCcmlkZ2VsZXNzIl0sIm1hcHBpbmdzIjoiQUFVQTs7Ozs7Ozs7O0FBRUE7O0FBQ0E7O0FBS0EsSUFBTUEscUNBQXFDLEdBQUc7QUFDNUNDLEVBQUFBLGVBQWUsRUFBRSw2QkFEMkI7QUFFNUNDLEVBQUFBLGtCQUFrQixFQUFFLEVBRndCO0FBRzVDQyxFQUFBQSxnQkFBZ0IsRUFBRSxFQUgwQjtBQUk1Q0MsRUFBQUEsZUFBZSxFQUFFO0FBQ2ZDLElBQUFBLGdCQUFnQixFQUFFLElBREg7QUFFZkMsSUFBQUEsdUJBQXVCLEVBQUUsSUFGVjtBQUdmQyxJQUFBQSxZQUFZLEVBQUU7QUFBQ0MsTUFBQUEsT0FBTyxFQUFFQyxPQUFPO0FBQWpCLEtBSEM7QUFJZkMsSUFBQUEsZ0JBQWdCLEVBQUUsSUFKSDtBQUtmQyxJQUFBQSxtQkFBbUIsRUFBRSxJQUxOO0FBTWZDLElBQUFBLGNBQWMsRUFBRSxJQU5EO0FBT2ZDLElBQUFBLGFBQWEsRUFBRSxJQVBBO0FBUWZDLElBQUFBLG1CQUFtQixFQUFFLElBUk47QUFTZkMsSUFBQUEsYUFBYSxFQUFFLElBVEE7QUFVZkMsSUFBQUEsYUFBYSxFQUFFLElBVkE7QUFXZkMsSUFBQUEsa0JBQWtCLEVBQUUsSUFYTDtBQVlmQyxJQUFBQSw4QkFBOEIsRUFBRSxJQVpqQjtBQWFmQyxJQUFBQSxTQUFTLEVBQUUsSUFiSTtBQWNmQyxJQUFBQSxjQUFjLEVBQUUsSUFkRDtBQWVmQyxJQUFBQSxXQUFXLEVBQUUsSUFmRTtBQWdCZkMsSUFBQUEsYUFBYSxFQUFFLElBaEJBO0FBaUJmQyxJQUFBQSxhQUFhLEVBQUU7QUFqQkE7QUFKMkIsQ0FBOUM7QUF5QkEsSUFBSUMsMENBQUo7O0FBQ0EsSUFBSUMsTUFBTSxDQUFDQyxhQUFYLEVBQTBCO0FBQ3hCLDRDQUNFLDZCQURGLEVBRUUxQixxQ0FGRjtBQUlBd0IsRUFBQUEsMENBQTBDLEdBQUcsNkJBQTdDO0FBQ0QsQ0FORCxNQU1PO0FBQ0xBLEVBQUFBLDBDQUEwQyxHQUFHLHFDQUMzQyw2QkFEMkMsQ0FBN0M7QUFHRDs7ZUFFZ0JBLDBDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKiBAZm9ybWF0XG4gKiBAZmxvd1xuICovXG5cbid1c2Ugc3RyaWN0JztcblxuaW1wb3J0IHJlZ2lzdGVyR2VuZXJhdGVkVmlld0NvbmZpZyBmcm9tICcuLi8uLi9VdGlsaXRpZXMvcmVnaXN0ZXJHZW5lcmF0ZWRWaWV3Q29uZmlnJztcbmltcG9ydCByZXF1aXJlTmF0aXZlQ29tcG9uZW50IGZyb20gJy4uLy4uL1JlYWN0TmF0aXZlL3JlcXVpcmVOYXRpdmVDb21wb25lbnQnO1xuXG5pbXBvcnQgdHlwZSB7SG9zdENvbXBvbmVudH0gZnJvbSAnLi4vLi4vUmVuZGVyZXIvc2hpbXMvUmVhY3ROYXRpdmVUeXBlcyc7XG5pbXBvcnQgdHlwZSB7U2Nyb2xsVmlld05hdGl2ZVByb3BzfSBmcm9tICcuL1Njcm9sbFZpZXdOYXRpdmVDb21wb25lbnRUeXBlJztcblxuY29uc3QgQW5kcm9pZEhvcml6b250YWxTY3JvbGxWaWV3Vmlld0NvbmZpZyA9IHtcbiAgdWlWaWV3Q2xhc3NOYW1lOiAnQW5kcm9pZEhvcml6b250YWxTY3JvbGxWaWV3JyxcbiAgYnViYmxpbmdFdmVudFR5cGVzOiB7fSxcbiAgZGlyZWN0RXZlbnRUeXBlczoge30sXG4gIHZhbGlkQXR0cmlidXRlczoge1xuICAgIGRlY2VsZXJhdGlvblJhdGU6IHRydWUsXG4gICAgZGlzYWJsZUludGVydmFsTW9tZW50dW06IHRydWUsXG4gICAgZW5kRmlsbENvbG9yOiB7cHJvY2VzczogcmVxdWlyZSgnLi4vLi4vU3R5bGVTaGVldC9wcm9jZXNzQ29sb3InKX0sXG4gICAgZmFkaW5nRWRnZUxlbmd0aDogdHJ1ZSxcbiAgICBuZXN0ZWRTY3JvbGxFbmFibGVkOiB0cnVlLFxuICAgIG92ZXJTY3JvbGxNb2RlOiB0cnVlLFxuICAgIHBhZ2luZ0VuYWJsZWQ6IHRydWUsXG4gICAgcGVyc2lzdGVudFNjcm9sbGJhcjogdHJ1ZSxcbiAgICBzY3JvbGxFbmFibGVkOiB0cnVlLFxuICAgIHNjcm9sbFBlcmZUYWc6IHRydWUsXG4gICAgc2VuZE1vbWVudHVtRXZlbnRzOiB0cnVlLFxuICAgIHNob3dzSG9yaXpvbnRhbFNjcm9sbEluZGljYXRvcjogdHJ1ZSxcbiAgICBzbmFwVG9FbmQ6IHRydWUsXG4gICAgc25hcFRvSW50ZXJ2YWw6IHRydWUsXG4gICAgc25hcFRvU3RhcnQ6IHRydWUsXG4gICAgc25hcFRvT2Zmc2V0czogdHJ1ZSxcbiAgICBjb250ZW50T2Zmc2V0OiB0cnVlLFxuICB9LFxufTtcblxubGV0IEFuZHJvaWRIb3Jpem9udGFsU2Nyb2xsVmlld05hdGl2ZUNvbXBvbmVudDtcbmlmIChnbG9iYWwuUk4kQnJpZGdlbGVzcykge1xuICByZWdpc3RlckdlbmVyYXRlZFZpZXdDb25maWcoXG4gICAgJ0FuZHJvaWRIb3Jpem9udGFsU2Nyb2xsVmlldycsXG4gICAgQW5kcm9pZEhvcml6b250YWxTY3JvbGxWaWV3Vmlld0NvbmZpZyxcbiAgKTtcbiAgQW5kcm9pZEhvcml6b250YWxTY3JvbGxWaWV3TmF0aXZlQ29tcG9uZW50ID0gJ0FuZHJvaWRIb3Jpem9udGFsU2Nyb2xsVmlldyc7XG59IGVsc2Uge1xuICBBbmRyb2lkSG9yaXpvbnRhbFNjcm9sbFZpZXdOYXRpdmVDb21wb25lbnQgPSByZXF1aXJlTmF0aXZlQ29tcG9uZW50PFNjcm9sbFZpZXdOYXRpdmVQcm9wcz4oXG4gICAgJ0FuZHJvaWRIb3Jpem9udGFsU2Nyb2xsVmlldycsXG4gICk7XG59XG5cbmV4cG9ydCBkZWZhdWx0ICgoQW5kcm9pZEhvcml6b250YWxTY3JvbGxWaWV3TmF0aXZlQ29tcG9uZW50OiBhbnkpOiBIb3N0Q29tcG9uZW50PFNjcm9sbFZpZXdOYXRpdmVQcm9wcz4pO1xuIl19