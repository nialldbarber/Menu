{"version":3,"sources":["Item.tsx"],"names":["Item","id","name","price","image","count","alt","styles","StyleSheet","create","itemContainer","display","flexDirection","borderWidth","borderColor","marginVertical","width","height","dispatch","isAddButtonActive","setIsAddButtonActive","item"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;;;AAWe,SAASA,IAAT,OAA+D;AAAA,MAAhDC,EAAgD,QAAhDA,EAAgD;AAAA,MAA5CC,IAA4C,QAA5CA,IAA4C;AAAA,MAAtCC,KAAsC,QAAtCA,KAAsC;AAAA,MAA/BC,KAA+B,QAA/BA,KAA+B;AAAA,MAAxBC,KAAwB,QAAxBA,KAAwB;AAAA,MAAjBC,GAAiB,QAAjBA,GAAiB;;AAC5E,MAAMC,MAAM,GAAGC,wBAAWC,MAAX,CAAkB;AAC/BC,IAAAA,aAAa,EAAE;AACbC,MAAAA,OAAO,EAAE,MADI;AAEbC,MAAAA,aAAa,EAAE,KAFF;AAGbC,MAAAA,WAAW,EAAE,CAHA;AAIbC,MAAAA,WAAW,EAAE,KAJA;AAKbC,MAAAA,cAAc,EAAE;AALH,KADgB;AAQ/BX,IAAAA,KAAK,EAAE;AACLY,MAAAA,KAAK,EAAE,GADF;AAELC,MAAAA,MAAM,EAAE;AAFH;AARwB,GAAlB,CAAf;;AAcA,MAAMC,QAAQ,GAAG,8BAAjB;;AACA,kBAAkD,qBAAS,IAAT,CAAlD;AAAA;AAAA,MAAOC,iBAAP;AAAA,MAA0BC,oBAA1B;;AAEA,MAAMC,IAAI,GAAG;AACXpB,IAAAA,EAAE,EAAFA,EADW;AAEXC,IAAAA,IAAI,EAAJA,IAFW;AAGXC,IAAAA,KAAK,EAALA,KAHW;AAIXC,IAAAA,KAAK,EAALA,KAJW;AAKXC,IAAAA,KAAK,EAALA,KALW;AAMXC,IAAAA,GAAG,EAAHA;AANW,GAAb;AASA,SACE,sBAAC,iBAAD;AAAkB,IAAA,KAAK,EAAEC,MAAM,CAACG,aAAhC;AAAA,eAEE,qBAAC,kBAAD;AAAO,MAAA,MAAM,EAAEN,KAAf;AAAsB,MAAA,KAAK,EAAEG,MAAM,CAACH;AAApC,MAFF,EAGE,sBAAC,iBAAD;AAAA,iBACE,qBAAC,iBAAD;AAAA,kBAAOF;AAAP,QADF,EAEE,qBAAC,iBAAD;AAAA,kBAAOC;AAAP,QAFF,EAGE,qBAAC,sBAAD;AACE,QAAA,OAAO,EAAE,mBAAM;AACb,cAAIgB,iBAAJ,EAAuB;AACrBC,YAAAA,oBAAoB,CAAC,KAAD,CAApB;AACAF,YAAAA,QAAQ,CAAC,yBAAcG,IAAd,CAAD,CAAR;AACD,WAHD,MAGO;AACLD,YAAAA,oBAAoB,CAAC,IAAD,CAApB;AACAF,YAAAA,QAAQ,CAAC,8BAAmBjB,EAAnB,CAAD,CAAR;AACD;AACF,SATH;AAAA,kBAWE,sBAAC,iBAAD;AAAA,qBAAOkB,iBAAiB,GAAG,QAAH,GAAc,aAAtC;AAAA;AAXF,QAHF;AAAA,MAHF;AAAA,KAAWf,KAAX,CADF;AAuBD","sourcesContent":["import {useState} from 'react'\nimport {StyleSheet, Image, Text, View, Pressable} from 'react-native'\nimport {useDispatch} from 'react-redux'\nimport {addItemToCart, removeItemFromCart} from '../../store/cart.slice'\n\ntype ItemProps = {\n  id?: number\n  name?: string\n  price?: number\n  image?: number | string\n  count?: number\n  alt?: string\n}\n\nexport default function Item({id, name, price, image, count, alt}: ItemProps) {\n  const styles = StyleSheet.create({\n    itemContainer: {\n      display: 'flex',\n      flexDirection: 'row',\n      borderWidth: 1,\n      borderColor: 'red',\n      marginVertical: 20,\n    },\n    image: {\n      width: 130,\n      height: 130,\n    },\n  })\n\n  const dispatch = useDispatch()\n  const [isAddButtonActive, setIsAddButtonActive] = useState(true)\n\n  const item = {\n    id,\n    name,\n    price,\n    image,\n    count,\n    alt,\n  }\n\n  return (\n    <View key={image} style={styles.itemContainer}>\n      {/* @ts-ignore */}\n      <Image source={image} style={styles.image} />\n      <View>\n        <Text>{name}</Text>\n        <Text>{price}</Text>\n        <Pressable\n          onPress={() => {\n            if (isAddButtonActive) {\n              setIsAddButtonActive(false)\n              dispatch(addItemToCart(item))\n            } else {\n              setIsAddButtonActive(true)\n              dispatch(removeItemFromCart(id))\n            }\n          }}\n        >\n          <Text>{isAddButtonActive ? 'Add to' : 'Remove from'} cart</Text>\n        </Pressable>\n      </View>\n    </View>\n  )\n}\n"]}